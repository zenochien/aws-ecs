[
{
	"uri": "/vi/",
	"title": "Bắt đầu với Amazon RDS",
	"tags": [],
	"description": "",
	"content": "Amazon Relational Database Service (Amazon RDS)   Amazon Relational Database Service (Amazon RDS) là một dịch vụ quản lý cho phép bạn triển khai và quản lý các cơ sở dữ liệu quan hệ trên AWS.\n  Amazon RDS là loại cơ sở dữ liệu xử lý giao dịch trực tuyến (OLTP).\n  Trường hợp sử dụng chính là cơ sở dữ liệu giao dịch (thay vì cơ sở dữ liệu phân tích).\n  Nó phù hợp nhất với các yêu cầu lưu trữ dữ liệu có cấu trúc và quan hệ.\n  Nó nhằm mục tiêu là một tùy chọn thay thế dễ dàng cho các instance trên nơi làm việc truyền thống của cùng loại cơ sở dữ liệu.\n  Các bản sao lưu tự động và việc vá lỗ được thực hiện trong các khung giờ bảo trì được xác định bởi khách hàng.\n  Việc mở rộng, sao chép và tính sẵn có chỉ cần một nút nhấn.\n    Amazon RDS hỗ trợ các hệ thống cơ sở dữ liệu sau:\n Amazon Aurora. MySQL. MariaDB. Oracle. SQL Server. PostgreSQL.    RDS là một dịch vụ được quản lý và bạn không có quyền truy cập vào máy chủ EC2 cơ bản (không có quyền truy cập root).\n  Ngoại lệ đối với quy tắc trên là Amazon RDS Custom, cho phép truy cập vào hệ điều hành cơ bản. Điều này mới và có sẵn cho một số DB Engine giới hạn và không xuất hiện trong bài kiểm tra (exam) hiện tại.\n  Dịch vụ quản lý Amazon RDS bao gồm các tính năng sau:\n Bảo mật và vá lỗ cho các DB instances. Sao lưu tự động cho các DB instances. Cập nhật phần mềm cho DB engine. Mở rộng dễ dàng cho lưu trữ và tính toán. Tùy chọn Multi-AZ với sao chép đồng bộ. Tự động chuyển giao cho tùy chọn Multi-AZ. Tùy chọn sao chép đọc cho các tải công việc nặng đọc. Một DB instance là môi trường cơ sở dữ liệu trong đám mây với tài nguyên tính toán và lưu trữ mà bạn chỉ định.    Các DB instance được truy cập thông qua các điểm cuối (endpoints).\n  Các điểm cuối có thể được truy xuất thông qua mô tả DB instance trong AWS Management Console, API DescribeDBInstances hoặc lệnh describe-db-instances.\n  Mặc định, khách hàng được phép có tối đa 40 DB instances Amazon RDS (chỉ có 10 trong số này có thể là Oracle hoặc MS SQL trừ khi bạn có giấy phép riêng của mình).\n  Cửa sổ bảo trì được cấu hình để cho phép thực hiện các sửa đổi DB instances như mở rộng và cài đặt phần mềm vá (một số hoạt động yêu cầu DB instance phải tắt một thời gian ngắn).\n  Bạn có thể xác định cửa sổ bảo trì hoặc AWS sẽ lên lịch cho một cửa sổ 30 phút.\n  Xác thực tích hợp với Windows chỉ hoạt động với SQL khi sử dụng các miền được tạo bằng dịch vụ thư mục AWS - cần thiết lập một mối tin tưởng với thư mục AD trên nơi làm việc truyền thống.\n  Sự kiện và Thông báo:  Amazon RDS sử dụng AWS SNS để gửi sự kiện RDS qua thông báo SNS. Bạn có thể sử dụng các cuộc gọi API đến dịch vụ Amazon RDS để liệt kê các sự kiện RDS trong 14 ngày qua (API DescribeEvents). Bạn có thể xem các sự kiện trong 14 ngày qua bằng dòng lệnh CLI. Sử dụng AWS Console, bạn chỉ có thể xem các sự kiện RDS trong 1 ngày qua.  Sử Dụng, Các Lựa Chọn Thay Thế và Anti-Patterns Bảng dưới đây cung cấp hướng dẫn về khi nào nên sử dụng RDS và một số dịch vụ lưu trữ dữ liệu cơ sở dữ liệu AWS khác:\n   Dịch Vụ Lưu Trữ Dữ Liệu Khi Nào Sử Dụng     Cơ Sở Dữ Liệu trên EC2 Kiểm soát tối đa về cơ sở dữ liệu, ưa chuộng DB không có sẵn trên RDS   Amazon RDS Cần cơ sở dữ liệu quan hệ truyền thống cho giao dịch trực tiếp (OLTP), dữ liệu của bạn được hình thành và có cấu trúc tốt, ứng dụng hiện có yêu cầu RDBMS   Amazon DynamoDB Dữ liệu cặp tên/giá trị hoặc cấu trúc dữ liệu không dự đoán được, hiệu suất trong bộ nhớ với tính bền vững, nhu cầu I/O cao, mở rộng một cách động   Amazon RedShift Khối lượng lớn dữ liệu, chủ yếu là tải làm phân tích trực quan (OLAP)   Amazon Neptune Mối quan hệ giữa các đối tượng là một phần quan trọng của giá trị dữ liệu   Amazon Elasticache Lưu trữ tạm thời nhanh cho lượng dữ liệu nhỏ, dữ liệu biến động cao   Amazon S3 Đối tượng nhị phân lớn (BLOBs), các trang web tĩnh    Tùy Chọn Thay Thế cho Amazon RDS:\nNếu trường hợp sử dụng của bạn không được hỗ trợ trên RDS, bạn có thể chạy cơ sở dữ liệu trên Amazon EC2.\nXem xét những điểm sau khi xem xét DB trên EC2:\n Bạn có thể chạy bất kỳ cơ sở dữ liệu nào bạn thích với sự kiểm soát đầy đủ và tính linh hoạt tối đa. Bạn phải quản lý mọi thứ như sao lưu, dự phòng, cập nhật và mở rộng. Lựa chọn tốt nếu bạn cần một cơ sở dữ liệu mà RDS chưa hỗ trợ, chẳng hạn như IBM DB2 hoặc SAP HANA. Lựa chọn tốt nếu việc di chuyển sang cơ sở dữ liệu do AWS quản lý không khả thi.  Anti-Patterns:\nAnti-patterns là những mẫu thiết kế hoặc phát triển cụ thể trong kiến trúc hoặc phát triển mà được xem xét là không tốt hoặc thực hành không tối ưu - tức là có thể có một dịch vụ hoặc phương pháp tốt hơn để đạt được kết quả tốt nhất.\nBảng dưới đây mô tả các yêu cầu không phù hợp cho RDS:\n   Yêu Cầu Dịch Vụ Thích Hợp Hơn     Nhiều đối tượng nhị phân lớn (BLOBs) S3   Khả năng tự động mở rộng DynamoDB   Cấu trúc Dữ Liệu Tên/Giá Trị DynamoDB   Dữ liệu không có cấu trúc hoặc không dự đoán được DynamoDB   Các nền tảng cơ sở dữ liệu khác như IBM DB2 hoặc SAP HANA EC2   Kiểm soát hoàn toàn trên cơ sở dữ liệu EC2    Mã Hóa:\nBạn có thể mã hóa các trường hợp và bản chụp Amazon RDS của bạn khi nghỉ bằng cách bật tùy chọn mã hóa cho trường hợp Amazon RDS DB của bạn.\nMã hóa khi nghỉ được hỗ trợ cho tất cả các loại DB và sử dụng AWS KMS.\nKhi sử dụng mã hóa khi nghỉ, các yếu tố sau cũng được mã hóa:\n Tất cả bản chụp DB. Sao lưu. Lưu trữ trường hợp DB. Read Replicas.  Bạn không thể mã hóa một DB hiện có, bạn cần tạo một bản chụp, sao chép nó, mã hóa bản sao, sau đó xây dựng một DB đã được mã hóa từ bản chụp.\nDữ liệu được mã hóa khi nghỉ bao gồm lưu trữ cơ bản cho một trường hợp DB, sao lưu tự động của nó, Read Replicas và các bản chụp.\nMột bản sao Read của một trường hợp RDS được mã hóa cũng bằng cách sử dụng cùng một khóa với trường hợp chính khi cả hai ở trong cùng một AZ.\nNếu trường hợp chính và Read Replica ở trong các AZ khác nhau, bạn sẽ mã hóa bằng cách sử dụng khóa mã hóa cho AZ đó.\nBạn không thể có một bản sao Read đã mã hóa của một trường hợp DB chưa mã hóa hoặc một bản sao Read chưa mã hóa của một trường hợp DB đã mã hóa.\nMã hóa/giải mã được xử lý một cách trong suốt.\nRDS hỗ trợ mã hóa SSL giữa các ứng dụng và trường hợp DB RDS.\nRDS tạo chứng chỉ cho trường hợp.\nNhóm DB Subnet group:\nNhóm DB Subnet group là một tập hợp các subnet group (thường là riêng tư) mà bạn tạo trong một VPC và sau đó bạn chỉ định cho các trường hợp DB của bạn.\nMỗi nhóm DB Subnet group nên có các subnet group trong ít nhất hai AZ khả dụng trong một AZ cụ thể.\nĐề xuất cấu hình một nhóm subnet group với các subnet group trong mỗi AZ (thậm chí cho các trường hợp độc lập).\nTrong quá trình tạo trường hợp RDS, bạn có thể chọn nhóm DB Subnet group và AZ trong nhóm để đặt trường hợp RDS DB vào đó.\nBạn không thể chọn địa chỉ IP trong subnet group được cấp.\nThanh Toán và Cung Cấp\nAWS tính phí cho:\n Giờ trường hợp DB (giờ phần làm tròn lên giờ đầy đủ). Lưu trữ GB/tháng. Yêu cầu I/O/tháng - cho lưu trữ từ tính. Provisioned IOPS/tháng - cho RDS SSD IOPS được cung cấp. Truyền dữ liệu ra ngoài. Lưu trữ sao lưu (sao lưu DB và bản chụp thủ công).  Lưu trữ sao lưu cho sao lưu tự động RDS là miễn phí cho đến kích thước ổ EBS đã được cung cấp.\nTuy nhiên, AWS sao chép dữ liệu qua nhiều AZ và do đó bạn phải trả tiền cho không gian lưu trữ thêm trên S3.\nĐối với đa-AZ, bạn phải trả tiền cho:\n Giờ DB đa-AZ. Lưu trữ được cung cấp. Ghi I/O hai lần. Đối với đa-AZ, bạn không phải trả phí cho truyền dữ liệu DB trong quá trình sao chép từ trường hợp chính sang trạng thái đứng.  Giấy phép Oracle và Microsoft SQL được bao gồm, hoặc bạn có thể tự mang (BYO).\nGiá ứng dụng dự phòng và giá ứng dụng dự phòng có sẵn.\nGiấy phép ứng dụng dự phòng được định nghĩa dựa trên các thuộc tính sau đây không được thay đổi:\n DB engine. Lớp trường hợp DB. Loại triển khai (độc lập, đa-AZ). Mô hình giấy phép. AZ.  Giấy phép ứng dụng dự phòng:\n Có thể di chuyển giữa các AZ trong cùng một AZ. Có sẵn cho các triển khai đa-AZ. Có thể áp dụng cho các bản sao Read nếu lớp trường hợp DB và AZ giống nhau.  Tính khả năng mở rộng được đạt được thông qua việc thay đổi lớp trường hợp để tính toán và điều chỉnh dung lượng lưu trữ bổ sung.\nKhả Năng Mở Rộng\nBạn chỉ có thể mở rộng RDS lên (tính toán và lưu trữ).\nBạn không thể giảm lưu trữ được cấp cho trường hợp RDS.\nBạn có thể mở rộng lưu trữ và thay đổi loại lưu trữ cho tất cả các DB engine ngoại trừ MS SQL.\nĐối với MS SQL, giải pháp tạm thời là tạo một trường hợp mới từ một bản chụp có cấu hình mới.\nViệc mở rộng lưu trữ có thể xảy ra trong khi trường hợp RDS đang chạy mà không gây ra sự cố, tuy nhiên có thể có sự suy giảm hiệu suất.\nViệc mở rộng tính toán sẽ gây ra thời gian ngừng hoạt động.\nBạn có thể chọn để thay đổi có hiệu lực ngay lập tức, tuy nhiên mặc định là trong cửa sổ bảo trì.\nYêu cầu mở rộng được áp dụng trong cửa sổ bảo trì được chỉ định trừ khi sử dụng \u0026ldquo;áp dụng ngay lập tức\u0026rdquo;.\nTất cả các loại DB RDS hỗ trợ kích thước DB tối đa là 64 TiB ngoại trừ Microsoft SQL Server (16 TiB).\nHiệu Năng\nAmazon RDS sử dụng ổ đĩa EBS (không sử dụng lưu trữ trường hợp) cho lưu trữ DB và log.\nCó ba loại lưu trữ có sẵn: Mục Đích Chung (SSD), Provisioned IOPS (SSD), và từ tính (Magnetic).\nMục Đích Chung (SSD):\n Sử dụng cho các tải công việc cơ sở dữ liệu có nhu cầu I/O trung bình. Hiệu quả về chi phí. Còn được gọi là gp2. 3 IOPS/GB. Burst lên đến 3000 IOPS.  Provisioned IOPS (SSD):\n Sử dụng cho công việc có yêu cầu I/O cao. Độ trễ thấp và I/O đều đặn. Số IOPS được chỉ định bởi người dùng (xem bảng bên dưới). Đối với lưu trữ IOPS được cấp, bảng dưới đây cho thấy phạm vi IOPS được cấp và phạm vi kích thước lưu trữ cho mỗi động cơ cơ sở dữ liệu.     Tên Động Cơ Cơ Sở Dữ Liệu Phạm Vi IOPS Được Cấp Phạm Vi Kích Thước Lưu Trữ     MariaDB 1.000-80.000 IOPS 100 GiB-64TiB   SQL Server 1.000-64.000 IOPS 20 GiB-16TiB   MySQL 1.000-80.000 IOPS 100 GiB-64TiB   Oracle 1.000-256.000 IOPS 100 GiB-64TiB   PostgreSQL 1.000-80.000 IOPS 100 GiB-64TiB    Từ Tính (Magnetic):\n Không còn được khuyến nghị nữa, có sẵn cho tích hợp ngược. Không cho phép bạn mở rộng lưu trữ khi sử dụng động cơ cơ sở dữ liệu SQL Server. Không hỗ trợ ổ đĩa co giãn. Giới hạn tối đa 4 TiB. Giới hạn tối đa 1.000 IOPS.  Multi-AZ và Read Replicas Multi-AZ và Read Replicas được sử dụng để đảm bảo tính sẵn có cao, khả năng chịu lỗi và mở rộng hiệu suất.\nBảng dưới đây so sánh các triển khai Multi-AZ và Read Replicas:\n   Multi-AZ Deployments (Triển khai Multi-AZ) Read Replicas (Read Replicas)     Replication đồng bộ - bền vững cao Replication không đồng bộ - mở rộng cao   Chỉ có cơ sở dữ liệu trên primary instance là hoạt động Tất cả read replicas đều có thể truy cập và được sử dụng để mở rộng đọc   Sao lưu tự động được thực hiện từ standby Không có sao lưu được cấu hình mặc định   Luôn luôn bao gồm hai vùng khả dụng trong một AZ duy nhất Có thể nằm trong một Availability Zone, Cross-AZ hoặc Cross-Region   Các instance của cơ sở dữ liệu được nâng cấp trên primary Việc nâng cấp instance của cơ sở dữ liệu độc lập với instance nguồn   Tự động chuyển đổi sang standby khi phát hiện sự cố Có thể được thăng cấp thủ công thành một instance cơ sở dữ liệu độc lập    Multi-AZ  Multi-AZ RDS tạo một bản sao ở AZ (AZ) khác và sao chép đồng bộ đến đó (chỉ dành cho DR). Có tùy chọn để chọn Multi-AZ trong quá trình tạo. AWS khuyên nên sử dụng lưu trữ provisioned IOPS cho các trường hợp DB RDS Multi-AZ. Mỗi AZ chạy trên cơ sở hạ tầng riêng biệt, độc lập về vật lý và được thiết kế để đảm bảo tính tin cậy cao. Bạn không thể chọn AZ nào trong AZ sẽ được chọn để tạo bản sao DB dự phòng. Bạn có thể xem AZ nào mà bản sao DB dự phòng được tạo ra. Failover có thể được kích hoạt trong các trường hợp sau:  Mất AZ chính hoặc lỗi trạng thái DB chính. Mất kết nối mạng với DB chính. Lỗi đơn vị tính toán (EC2) trên DB chính. Lỗi đơn vị lưu trữ (EBS) trên DB chính. Thay đổi DB chính. Cập nhật hệ điều hành trên DB chính. Failover thủ công (khởi động lại với lựa chọn failover được chọn trên DB chính).   Trong quá trình failover, RDS tự động cập nhật cấu hình (bao gồm điểm cuối DNS) để sử dụng nút thứ hai. Tùy thuộc vào lớp instance, có thể mất từ 1 đến vài phút để failover đến bản sao DB dự phòng. Được đề xuất triển khai việc thử lại kết nối DB trong ứng dụng của bạn.Read Replicas Được đề xuất sử dụng điểm cuối thay vì địa chỉ IP để chỉ định ứng dụng đến DB RDS. Cách để khởi đầu failover của DB RDS dự phòng thủ công là khởi động lại và chọn tùy chọn failover. Yêu cầu khởi động lại DB để thay đổi cấu hình nhóm tham số DB hoặc khi bạn thay đổi tham số DB tĩnh. Nhóm tham số DB là một hộp chứa cấu hình cho động cơ DB. Bạn sẽ nhận được thông báo từ sự kiện DB khi failover xảy ra. Bản sao DB thứ cấp trong cấu hình Multi-AZ không thể được sử dụng như một nút đọc độc lập (đọc hoặc ghi). Không tính phí cho việc truyền dữ liệu giữa các trường hợp RDS chính và dự phòng. Các nâng cấp hệ thống như việc cập nhật hệ điều hành, thay đổi kích thước DB Instance và các nâng cấp hệ thống được áp dụng trước tiên trên replicas trước khi failover và sửa đổi DB Instance khác. Trong cấu hình Multi-AZ, các bản snapshot và sao lưu tự động được thực hiện trên replicas để tránh tạm dừng I/O trên trường hợp DB chính.  Hỗ trợ Read Replicas cho Multi-AZ:  Amazon RDS Read Replicas cho MySQL, MariaDB, PostgreSQL và Oracle hỗ trợ các triển khai Multi-AZ. Kết hợp Read Replicas với Multi-AZ cho phép bạn xây dựng một chiến lược phục hồi thảm họa chắc chắn và đơn giản hóa quá trình nâng cấp động cơ cơ sở dữ liệu của bạn. Một read snapshot ở một AZ khác so với cơ sở dữ liệu nguồn có thể được sử dụng như một cơ sở dữ liệu dự phòng và được thúc đẩy để trở thành cơ sở dữ liệu sản xuất mới trong trường hợp có sự cố vùng. Điều này cho phép bạn mở rộng khả năng đọc đồng thời cũng như có Multi-AZ cho DR.  Quy trình thực hiện các hoạt động bảo trì như sau:  Thực hiện các hoạt động trên replicas. Thúc đẩy replicas để trở thành primary . Thực hiện các hoạt động trên replicas mới (primary bị hạ cấp).  Bạn có thể nâng cấp thủ công một DB instance lên phiên bản động cơ DB được hỗ trợ từ AWS Console.  Theo mặc định, nâng cấp sẽ có hiệu lực trong cửa sổ bảo trì tiếp theo. Bạn có thể tùy chọn buộc nâng cấp ngay lập tức. Trong các triển khai Multi-AZ, nâng cấp phiên bản sẽ được thực hiện trên cả primary và replicas cùng một lúc, gây ra sự cố cho cả hai DB Instance. Đảm bảo các SG và NACL sẽ cho phép máy chủ ứng dụng của bạn giao tiếp với cả primary và replicas.  Read Replicas Read Replicas được sử dụng cho các cơ sở dữ liệu có tải đọc nhiều và sao chép là không đồng bộ.\nRead Replicas được sử dụng để chia sẻ và giảm tải công việc làm.\nRead Replicas cung cấp khả năng khôi phục dữ liệu ở chế độ chỉ đọc.\nRead Replicas được tạo ra từ một bản snapshot của bản chính.\nPhải bật tính năng sao lưu tự động trên bản chính (thời gian lưu trữ \u0026gt; 0).\nChỉ được hỗ trợ cho các động cơ lưu trữ cơ sở dữ liệu giao dịch (InnoDB không phải InnoDB).\nRead Replicas có sẵn cho MySQL, PostgreSQL, MariaDB, Oracle, Aurora và SQL Server.\nĐối với các động cơ cơ sở dữ liệu MySQL, MariaDB, PostgreSQL và Oracle, Amazon RDS tạo ra một bản thứ hai sử dụng bản snapshot của bản chính.\nSau đó, nó sử dụng sao chép không đồng bộ tự nhiên của các động cơ để cập nhật Read Replicas mỗi khi có sự thay đổi đối với bản chính.\nAmazon Aurora sử dụng một lớp lưu trữ ảo được hỗ trợ bởi SSD, được thiết kế đặc biệt cho tải công việc làm cơ sở dữ liệu.\nBạn có thể tạo snapshot của các Read Replicas PostgreSQL nhưng không thể bật sao lưu tự động.\nBạn có thể bật sao lưu tự động trên các Read Replicas MySQL và MariaDB.\nBạn có thể bật viết trên các Read Replicas MySQL và MariaDB.\nBạn có thể có tối đa 5 Read Replicas của một cơ sở dữ liệu sản xuất.\nBạn không thể có nhiều hơn bốn bản sao tham gia trong chuỗi sao chép.\nBạn có thể có Read Replicas của các Read Replicas cho MySQL và MariaDB nhưng không cho PostgreSQL.\nCấu hình Read Replicas có thể được thiết lập từ Giao diện AWS hoặc API.\nBạn có thể chỉ định khu vực ra đời của Read Replicas.\nLoại lưu trữ và lớp bản chính của các Read Replicas có thể khác nhau so với nguồn, nhưng tính toán phải ít nhất là hiệu suất của nguồn.\nBạn không thể thay đổi động cơ cơ sở dữ liệu.\nTrong trường hợp mất kết nối đa khu vực, các Read Replicas được chuyển sang bản chính mới.\nRead Replicas phải được xóa một cách tường tận.\nNếu một bản chính bị xóa mà không xóa các bản sao, mỗi bản sao trở thành một bản chính độc lập tại một khu vực một khu vực.\nBạn có thể thăng cấp một Read Replicas thành bản chính.\nViệc thăng cấp Read Replicas mất vài phút.\nCác Read Replicas được thăng cấp giữ lại:\n Thời gian lưu trữ sao lưu. Cửa sổ sao lưu. Nhóm tham số cơ sở dữ liệu. Các Read Replicas hiện có vẫn hoạt động như bình thường.  Mỗi Read Replicas có một điểm cuối DNS riêng.\nCác Read Replicas có thể được bật đa khu vực và bạn có thể tạo các Read Replicas từ các cơ sở dữ liệu nguồn đa khu vực.\nCác Read Replicas có thể nằm ở khu vực khác (sử dụng sao chép không đồng bộ).\nCấu hình này có thể được sử dụng để tập trung dữ liệu từ các khu vực khác nhau cho mục đích phân tích.\nDB Snapshots DB Snapshots là các tình huống do người dùng khởi tạo và cho phép bạn sao lưu DB instance của bạn ở trong một trạng thái xác định bất kỳ thường xuyên như bạn muốn, sau đó khôi phục về trạng thái cụ thể đó.\nKhông thể sử dụng để khôi phục tại điểm thời gian cụ thể.\nCác Snapshot được lưu trữ trên S3.\nSnapshot sẽ tồn tại trên S3 cho đến khi bị xóa bằng cách thủ công.\nSao lưu được thực hiện trong một khoảng thời gian đã được định.\nI/O tạm ngừng trong thời gian sao lưu và có thể làm tăng độ trễ (áp dụng cho RDS chỉ có một vùng khu vực).\nCác DB Snapshot được thực hiện bằng cách thủ công sẽ được lưu trữ ngay cả sau khi DB instance RDS bị xóa.\nCác DB được khôi phục sẽ luôn là một DB instance RDS mới với một điểm cuối DNS mới.\nCó thể khôi phục lên đến 5 phút trước.\nChỉ có các tham số DB mặc định và các nhóm bảo mật được khôi phục - bạn phải liên kết các tham số DB và SG khác một cách thủ công.\nNên nên chụp một Snapshot cuối cùng trước khi xóa một DB instance RDS.\nSnapshot có thể chia sẻ với các tài khoản AWS khác.\nCác phương pháp Có sẵn cho Sự có sẵn cao cấp cho Cơ sở dữ liệu Nếu có thể, hãy chọn DynamoDB thay vì RDS vì tính chịu lỗi tích hợp.\nNếu không thể sử dụng DynamoDB, hãy chọn Aurora vì tính dự phòng và tính năng khôi phục tự động.\nNếu không thể sử dụng Aurora, hãy chọn Multi-AZ RDS.\nCác sao lưu RDS thường xuyên có thể bảo vệ trước sự hỏng hoặc sự cố dữ liệu và chúng không ảnh hưởng đến hiệu suất triển khai Multi-AZ.\nSao lưu dự phòng khu vực cũng là một lựa chọn nhưng không được đảm bảo sẽ nhất quán mạnh mẽ.\nNếu cơ sở dữ liệu chạy trên EC2, bạn phải tự thiết kế tính sẵn có.\nDi chuyển dữ liệu Dịch vụ Di chuyển Cơ sở dữ liệu AWS giúp bạn di chuyển cơ sở dữ liệu vào AWS một cách nhanh chóng và an toàn.\nSử dụng kèm với Công cụ Chuyển đổi Schema (SCT) để di chuyển cơ sở dữ liệu vào RDS AWS hoặc cơ sở dữ liệu dựa trên EC2.\nCơ sở dữ liệu nguồn vẫn hoạt động hoàn toàn trong quá trình di chuyển, giảm thiểu thời gian chết cho các ứng dụng phụ thuộc vào cơ sở dữ liệu.\nDịch vụ Di chuyển Cơ sở dữ liệu AWS có thể di chuyển dữ liệu của bạn tới và từ hầu hết các cơ sở dữ liệu thương mại và nguồn mở phổ biến.\nCông cụ Chuyển đổi Schema có thể sao chép các schema cơ sở dữ liệu cho các di chuyển đồng nhất (cùng loại cơ sở dữ liệu) và chuyển đổi các schema cho các di chuyển không đồng nhất (khác loại cơ sở dữ liệu).\nDMS được sử dụng cho các chuyển đổi nhỏ hơn, đơn giản hơn và hỗ trợ MongoDB và DynamoDB.\nSCT được sử dụng cho các bộ dữ liệu lớn hơn, phức tạp hơn như các kho dữ liệu.\nDMS có chức năng sao chép từ nơi trên cơ sở vào AWS hoặc vào Snowball hoặc S3.\nTheo dõi, Ghi log và Báo cáo Bạn có thể sử dụng các công cụ theo dõi tự động sau để theo dõi Amazon RDS và báo cáo khi có điều gì đó sai:\n Sự kiện Amazon RDS - Đăng ký sự kiện Amazon RDS để được thông báo khi có thay đổi với DB instance, DB snapshot, nhóm tham số DB hoặc nhóm bảo mật DB. Các tệp ghi cơ sở dữ liệu - Xem, tải xuống hoặc xem các tệp ghi cơ sở dữ liệu bằng cách sử dụng giao diện Amazon RDS hoặc các thao tác API Amazon RDS. Bạn cũng có thể truy vấn một số tệp ghi cơ sở dữ liệu được nạp vào các bảng cơ sở dữ liệu. Amazon RDS Enhanced Monitoring - Xem các số liệu thống kê thời gian thực cho hệ điều hành. Amazon RDS Performance Insights - Đánh giá tải trên cơ sở dữ liệu của bạn và xác định khi nào và ở đâu cần thực hiện. Amazon RDS Recommendations - Xem các khuyến nghị tự động cho các tài nguyên cơ sở dữ liệu, chẳng hạn như các DB instance, bản sao đọc và nhóm tham số DB.  Ngoài ra, Amazon RDS tích hợp với Amazon CloudWatch, Amazon EventBridge và AWS CloudTrail cho khả năng theo dõi bổ sung:\n Số liệu CloudWatch - Amazon RDS tự động gửi số liệu đến CloudWatch mỗi phút cho mỗi cơ sở dữ liệu hoạt động. Bạn không phải trả thêm phí cho số liệu Amazon RDS trong CloudWatch. Các cảnh báo CloudWatch - Bạn có thể theo dõi một số liệu Amazon RDS duy nhất trong một khoảng thời gian cụ thể. Sau đó, bạn có thể thực hiện một hoặc nhiều hành động dựa trên giá trị của số liệu đối với ngưỡng bạn đặt. Các tệp ghi CloudWatch - Hầu hết các động cơ DB cho phép bạn theo dõi, lưu trữ và truy cập các tệp ghi cơ sở dữ liệu của bạn trong CloudWatch Logs. Các sự kiện CloudWatch và Amazon EventBridge - Bạn có thể tự động hóa các dịch vụ AWS và phản ứng với các sự kiện hệ thống như vấn đề sẵn sàng ứng dụng hoặc thay đổi tài nguyên. Sự kiện từ các dịch vụ AWS được gửi đến CloudWatch Events và EventBridge gần như trong thời gian thực. Bạn có thể viết các quy tắc đơn giản để chỉ định các sự kiện mà bạn quan tâm và các hành động tự động nào nên thực hiện khi một sự kiện phù hợp với quy tắc. AWS CloudTrail - Bạn có thể xem một hồ sơ các hành động được thực hiện bởi người dùng, vai trò hoặc dịch vụ AWS trong Amazon RDS. CloudTrail ghi lại tất cả các cuộc gọi API cho Amazon RDS như sự kiện. Các cuộc gọi này bao gồm cuộc gọi từ giao diện Amazon RDS và từ các cuộc gọi mã vào các thao tác API Amazon RDS. Nếu bạn tạo một dãy, bạn có thể bật giao hàng liên tục của các sự kiện CloudTrail đến một xô Amazon S3, bao gồm các sự kiện cho Amazon RDS. Nếu bạn không cấu hình một dãy, bạn vẫn có thể xem các sự kiện gần đây nhất trong bảng điều khiển CloudTrail trong Lịch sử sự kiện.  "
},
{
	"uri": "/vi/1-introduce/",
	"title": "Giới thiệu",
	"tags": [],
	"description": "",
	"content": "Amazon Relational Database Service (Amazon RDS)   Amazon Relational Database Service (Amazon RDS) là một dịch vụ quản lý cho phép bạn triển khai và quản lý các cơ sở dữ liệu quan hệ trên AWS.\n  Amazon RDS là loại cơ sở dữ liệu xử lý giao dịch trực tuyến (OLTP).\n  Trường hợp sử dụng chính là cơ sở dữ liệu giao dịch (thay vì cơ sở dữ liệu phân tích).\n  Nó phù hợp nhất với các yêu cầu lưu trữ dữ liệu có cấu trúc và quan hệ.\n  Nó nhằm mục tiêu là một tùy chọn thay thế dễ dàng cho các instance trên nơi làm việc truyền thống của cùng loại cơ sở dữ liệu.\n  Các bản sao lưu tự động và việc vá lỗ được thực hiện trong các khung giờ bảo trì được xác định bởi khách hàng.\n  Việc mở rộng, sao chép và tính sẵn có chỉ cần một nút nhấn.\n    Amazon RDS hỗ trợ các hệ thống cơ sở dữ liệu sau:\n Amazon Aurora. MySQL. MariaDB. Oracle. SQL Server. PostgreSQL.    RDS là một dịch vụ được quản lý và bạn không có quyền truy cập vào máy chủ EC2 cơ bản (không có quyền truy cập root).\n  Ngoại lệ đối với quy tắc trên là Amazon RDS Custom, cho phép truy cập vào hệ điều hành cơ bản. Điều này mới và có sẵn cho một số DB Engine giới hạn và không xuất hiện trong bài kiểm tra (exam) hiện tại.\n  Dịch vụ quản lý Amazon RDS bao gồm các tính năng sau:\n Bảo mật và vá lỗ cho các DB instances. Sao lưu tự động cho các DB instances. Cập nhật phần mềm cho DB engine. Mở rộng dễ dàng cho lưu trữ và tính toán. Tùy chọn Multi-AZ với sao chép đồng bộ. Tự động chuyển giao cho tùy chọn Multi-AZ. Tùy chọn sao chép đọc cho các tải công việc nặng đọc. Một DB instance là môi trường cơ sở dữ liệu trong đám mây với tài nguyên tính toán và lưu trữ mà bạn chỉ định.    Các DB instance được truy cập thông qua các điểm cuối (endpoints).\n  Các điểm cuối có thể được truy xuất thông qua mô tả DB instance trong AWS Management Console, API DescribeDBInstances hoặc lệnh describe-db-instances.\n  Mặc định, khách hàng được phép có tối đa 40 DB instances Amazon RDS (chỉ có 10 trong số này có thể là Oracle hoặc MS SQL trừ khi bạn có giấy phép riêng của mình).\n  Cửa sổ bảo trì được cấu hình để cho phép thực hiện các sửa đổi DB instances như mở rộng và cài đặt phần mềm vá (một số hoạt động yêu cầu DB instance phải tắt một thời gian ngắn).\n  Bạn có thể xác định cửa sổ bảo trì hoặc AWS sẽ lên lịch cho một cửa sổ 30 phút.\n  Xác thực tích hợp với Windows chỉ hoạt động với SQL khi sử dụng các miền được tạo bằng dịch vụ thư mục AWS - cần thiết lập một mối tin tưởng với thư mục AD trên nơi làm việc truyền thống.\n  Sự kiện và Thông báo:  Amazon RDS sử dụng AWS SNS để gửi sự kiện RDS qua thông báo SNS. Bạn có thể sử dụng các cuộc gọi API đến dịch vụ Amazon RDS để liệt kê các sự kiện RDS trong 14 ngày qua (API DescribeEvents). Bạn có thể xem các sự kiện trong 14 ngày qua bằng dòng lệnh CLI. Sử dụng AWS Console, bạn chỉ có thể xem các sự kiện RDS trong 1 ngày qua.  Sử Dụng, Các Lựa Chọn Thay Thế và Anti-Patterns Bảng dưới đây cung cấp hướng dẫn về khi nào nên sử dụng RDS và một số dịch vụ lưu trữ dữ liệu cơ sở dữ liệu AWS khác:\n   Dịch Vụ Lưu Trữ Dữ Liệu Khi Nào Sử Dụng     Cơ Sở Dữ Liệu trên EC2 Kiểm soát tối đa về cơ sở dữ liệu, ưa chuộng DB không có sẵn trên RDS   Amazon RDS Cần cơ sở dữ liệu quan hệ truyền thống cho giao dịch trực tiếp (OLTP), dữ liệu của bạn được hình thành và có cấu trúc tốt, ứng dụng hiện có yêu cầu RDBMS   Amazon DynamoDB Dữ liệu cặp tên/giá trị hoặc cấu trúc dữ liệu không dự đoán được, hiệu suất trong bộ nhớ với tính bền vững, nhu cầu I/O cao, mở rộng một cách động   Amazon RedShift Khối lượng lớn dữ liệu, chủ yếu là tải làm phân tích trực quan (OLAP)   Amazon Neptune Mối quan hệ giữa các đối tượng là một phần quan trọng của giá trị dữ liệu   Amazon Elasticache Lưu trữ tạm thời nhanh cho lượng dữ liệu nhỏ, dữ liệu biến động cao   Amazon S3 Đối tượng nhị phân lớn (BLOBs), các trang web tĩnh    Tùy Chọn Thay Thế cho Amazon RDS:\nNếu trường hợp sử dụng của bạn không được hỗ trợ trên RDS, bạn có thể chạy cơ sở dữ liệu trên Amazon EC2.\nXem xét những điểm sau khi xem xét DB trên EC2:\n Bạn có thể chạy bất kỳ cơ sở dữ liệu nào bạn thích với sự kiểm soát đầy đủ và tính linh hoạt tối đa. Bạn phải quản lý mọi thứ như sao lưu, dự phòng, cập nhật và mở rộng. Lựa chọn tốt nếu bạn cần một cơ sở dữ liệu mà RDS chưa hỗ trợ, chẳng hạn như IBM DB2 hoặc SAP HANA. Lựa chọn tốt nếu việc di chuyển sang cơ sở dữ liệu do AWS quản lý không khả thi.  Anti-Patterns:\nAnti-patterns là những mẫu thiết kế hoặc phát triển cụ thể trong kiến trúc hoặc phát triển mà được xem xét là không tốt hoặc thực hành không tối ưu - tức là có thể có một dịch vụ hoặc phương pháp tốt hơn để đạt được kết quả tốt nhất.\nBảng dưới đây mô tả các yêu cầu không phù hợp cho RDS:\n   Yêu Cầu Dịch Vụ Thích Hợp Hơn     Nhiều đối tượng nhị phân lớn (BLOBs) S3   Khả năng tự động mở rộng DynamoDB   Cấu trúc Dữ Liệu Tên/Giá Trị DynamoDB   Dữ liệu không có cấu trúc hoặc không dự đoán được DynamoDB   Các nền tảng cơ sở dữ liệu khác như IBM DB2 hoặc SAP HANA EC2   Kiểm soát hoàn toàn trên cơ sở dữ liệu EC2    Mã Hóa:\nBạn có thể mã hóa các trường hợp và bản chụp Amazon RDS của bạn khi nghỉ bằng cách bật tùy chọn mã hóa cho trường hợp Amazon RDS DB của bạn.\nMã hóa khi nghỉ được hỗ trợ cho tất cả các loại DB và sử dụng AWS KMS.\nKhi sử dụng mã hóa khi nghỉ, các yếu tố sau cũng được mã hóa:\n Tất cả bản chụp DB. Sao lưu. Lưu trữ trường hợp DB. Read Replicas.  Bạn không thể mã hóa một DB hiện có, bạn cần tạo một bản chụp, sao chép nó, mã hóa bản sao, sau đó xây dựng một DB đã được mã hóa từ bản chụp.\nDữ liệu được mã hóa khi nghỉ bao gồm lưu trữ cơ bản cho một trường hợp DB, sao lưu tự động của nó, Read Replicas và các bản chụp.\nMột bản sao Read của một trường hợp RDS được mã hóa cũng bằng cách sử dụng cùng một khóa với trường hợp chính khi cả hai ở trong cùng một AZ.\nNếu trường hợp chính và Read Replica ở trong các AZ khác nhau, bạn sẽ mã hóa bằng cách sử dụng khóa mã hóa cho AZ đó.\nBạn không thể có một bản sao Read đã mã hóa của một trường hợp DB chưa mã hóa hoặc một bản sao Read chưa mã hóa của một trường hợp DB đã mã hóa.\nMã hóa/giải mã được xử lý một cách trong suốt.\nRDS hỗ trợ mã hóa SSL giữa các ứng dụng và trường hợp DB RDS.\nRDS tạo chứng chỉ cho trường hợp.\nNhóm DB Subnet group:\nNhóm DB Subnet group là một tập hợp các subnet group (thường là riêng tư) mà bạn tạo trong một VPC và sau đó bạn chỉ định cho các trường hợp DB của bạn.\nMỗi nhóm DB Subnet group nên có các subnet group trong ít nhất hai AZ khả dụng trong một AZ cụ thể.\nĐề xuất cấu hình một nhóm subnet group với các subnet group trong mỗi AZ (thậm chí cho các trường hợp độc lập).\nTrong quá trình tạo trường hợp RDS, bạn có thể chọn nhóm DB Subnet group và AZ trong nhóm để đặt trường hợp RDS DB vào đó.\nBạn không thể chọn địa chỉ IP trong subnet group được cấp.\nThanh Toán và Cung Cấp\nAWS tính phí cho:\n Giờ trường hợp DB (giờ phần làm tròn lên giờ đầy đủ). Lưu trữ GB/tháng. Yêu cầu I/O/tháng - cho lưu trữ từ tính. Provisioned IOPS/tháng - cho RDS SSD IOPS được cung cấp. Truyền dữ liệu ra ngoài. Lưu trữ sao lưu (sao lưu DB và bản chụp thủ công).  Lưu trữ sao lưu cho sao lưu tự động RDS là miễn phí cho đến kích thước ổ EBS đã được cung cấp.\nTuy nhiên, AWS sao chép dữ liệu qua nhiều AZ và do đó bạn phải trả tiền cho không gian lưu trữ thêm trên S3.\nĐối với đa-AZ, bạn phải trả tiền cho:\n Giờ DB đa-AZ. Lưu trữ được cung cấp. Ghi I/O hai lần. Đối với đa-AZ, bạn không phải trả phí cho truyền dữ liệu DB trong quá trình sao chép từ trường hợp chính sang trạng thái đứng.  Giấy phép Oracle và Microsoft SQL được bao gồm, hoặc bạn có thể tự mang (BYO).\nGiá ứng dụng dự phòng và giá ứng dụng dự phòng có sẵn.\nGiấy phép ứng dụng dự phòng được định nghĩa dựa trên các thuộc tính sau đây không được thay đổi:\n DB engine. Lớp trường hợp DB. Loại triển khai (độc lập, đa-AZ). Mô hình giấy phép. AZ.  Giấy phép ứng dụng dự phòng:\n Có thể di chuyển giữa các AZ trong cùng một AZ. Có sẵn cho các triển khai đa-AZ. Có thể áp dụng cho các bản sao Read nếu lớp trường hợp DB và AZ giống nhau.  Tính khả năng mở rộng được đạt được thông qua việc thay đổi lớp trường hợp để tính toán và điều chỉnh dung lượng lưu trữ bổ sung.\nKhả Năng Mở Rộng\nBạn chỉ có thể mở rộng RDS lên (tính toán và lưu trữ).\nBạn không thể giảm lưu trữ được cấp cho trường hợp RDS.\nBạn có thể mở rộng lưu trữ và thay đổi loại lưu trữ cho tất cả các DB engine ngoại trừ MS SQL.\nĐối với MS SQL, giải pháp tạm thời là tạo một trường hợp mới từ một bản chụp có cấu hình mới.\nViệc mở rộng lưu trữ có thể xảy ra trong khi trường hợp RDS đang chạy mà không gây ra sự cố, tuy nhiên có thể có sự suy giảm hiệu suất.\nViệc mở rộng tính toán sẽ gây ra thời gian ngừng hoạt động.\nBạn có thể chọn để thay đổi có hiệu lực ngay lập tức, tuy nhiên mặc định là trong cửa sổ bảo trì.\nYêu cầu mở rộng được áp dụng trong cửa sổ bảo trì được chỉ định trừ khi sử dụng \u0026ldquo;áp dụng ngay lập tức\u0026rdquo;.\nTất cả các loại DB RDS hỗ trợ kích thước DB tối đa là 64 TiB ngoại trừ Microsoft SQL Server (16 TiB).\nHiệu Năng\nAmazon RDS sử dụng ổ đĩa EBS (không sử dụng lưu trữ trường hợp) cho lưu trữ DB và log.\nCó ba loại lưu trữ có sẵn: Mục Đích Chung (SSD), Provisioned IOPS (SSD), và từ tính (Magnetic).\nMục Đích Chung (SSD):\n Sử dụng cho các tải công việc cơ sở dữ liệu có nhu cầu I/O trung bình. Hiệu quả về chi phí. Còn được gọi là gp2. 3 IOPS/GB. Burst lên đến 3000 IOPS.  Provisioned IOPS (SSD):\n Sử dụng cho công việc có yêu cầu I/O cao. Độ trễ thấp và I/O đều đặn. Số IOPS được chỉ định bởi người dùng (xem bảng bên dưới). Đối với lưu trữ IOPS được cấp, bảng dưới đây cho thấy phạm vi IOPS được cấp và phạm vi kích thước lưu trữ cho mỗi động cơ cơ sở dữ liệu.     Tên Động Cơ Cơ Sở Dữ Liệu Phạm Vi IOPS Được Cấp Phạm Vi Kích Thước Lưu Trữ     MariaDB 1.000-80.000 IOPS 100 GiB-64TiB   SQL Server 1.000-64.000 IOPS 20 GiB-16TiB   MySQL 1.000-80.000 IOPS 100 GiB-64TiB   Oracle 1.000-256.000 IOPS 100 GiB-64TiB   PostgreSQL 1.000-80.000 IOPS 100 GiB-64TiB    Từ Tính (Magnetic):\n Không còn được khuyến nghị nữa, có sẵn cho tích hợp ngược. Không cho phép bạn mở rộng lưu trữ khi sử dụng động cơ cơ sở dữ liệu SQL Server. Không hỗ trợ ổ đĩa co giãn. Giới hạn tối đa 4 TiB. Giới hạn tối đa 1.000 IOPS.  Multi-AZ và Read Replicas Multi-AZ và Read Replicas được sử dụng để đảm bảo tính sẵn có cao, khả năng chịu lỗi và mở rộng hiệu suất.\nBảng dưới đây so sánh các triển khai Multi-AZ và Read Replicas:\n   Multi-AZ Deployments (Triển khai Multi-AZ) Read Replicas (Read Replicas)     Replication đồng bộ - bền vững cao Replication không đồng bộ - mở rộng cao   Chỉ có cơ sở dữ liệu trên primary instance là hoạt động Tất cả read replicas đều có thể truy cập và được sử dụng để mở rộng đọc   Sao lưu tự động được thực hiện từ standby Không có sao lưu được cấu hình mặc định   Luôn luôn bao gồm hai vùng khả dụng trong một AZ duy nhất Có thể nằm trong một Availability Zone, Cross-AZ hoặc Cross-Region   Các instance của cơ sở dữ liệu được nâng cấp trên primary Việc nâng cấp instance của cơ sở dữ liệu độc lập với instance nguồn   Tự động chuyển đổi sang standby khi phát hiện sự cố Có thể được thăng cấp thủ công thành một instance cơ sở dữ liệu độc lập    Multi-AZ  Multi-AZ RDS tạo một bản sao ở AZ (AZ) khác và sao chép đồng bộ đến đó (chỉ dành cho DR). Có tùy chọn để chọn Multi-AZ trong quá trình tạo. AWS khuyên nên sử dụng lưu trữ provisioned IOPS cho các trường hợp DB RDS Multi-AZ. Mỗi AZ chạy trên cơ sở hạ tầng riêng biệt, độc lập về vật lý và được thiết kế để đảm bảo tính tin cậy cao. Bạn không thể chọn AZ nào trong AZ sẽ được chọn để tạo bản sao DB dự phòng. Bạn có thể xem AZ nào mà bản sao DB dự phòng được tạo ra. Failover có thể được kích hoạt trong các trường hợp sau:  Mất AZ chính hoặc lỗi trạng thái DB chính. Mất kết nối mạng với DB chính. Lỗi đơn vị tính toán (EC2) trên DB chính. Lỗi đơn vị lưu trữ (EBS) trên DB chính. Thay đổi DB chính. Cập nhật hệ điều hành trên DB chính. Failover thủ công (khởi động lại với lựa chọn failover được chọn trên DB chính).   Trong quá trình failover, RDS tự động cập nhật cấu hình (bao gồm điểm cuối DNS) để sử dụng nút thứ hai. Tùy thuộc vào lớp instance, có thể mất từ 1 đến vài phút để failover đến bản sao DB dự phòng. Được đề xuất triển khai việc thử lại kết nối DB trong ứng dụng của bạn.Read Replicas Được đề xuất sử dụng điểm cuối thay vì địa chỉ IP để chỉ định ứng dụng đến DB RDS. Cách để khởi đầu failover của DB RDS dự phòng thủ công là khởi động lại và chọn tùy chọn failover. Yêu cầu khởi động lại DB để thay đổi cấu hình nhóm tham số DB hoặc khi bạn thay đổi tham số DB tĩnh. Nhóm tham số DB là một hộp chứa cấu hình cho động cơ DB. Bạn sẽ nhận được thông báo từ sự kiện DB khi failover xảy ra. Bản sao DB thứ cấp trong cấu hình Multi-AZ không thể được sử dụng như một nút đọc độc lập (đọc hoặc ghi). Không tính phí cho việc truyền dữ liệu giữa các trường hợp RDS chính và dự phòng. Các nâng cấp hệ thống như việc cập nhật hệ điều hành, thay đổi kích thước DB Instance và các nâng cấp hệ thống được áp dụng trước tiên trên replicas trước khi failover và sửa đổi DB Instance khác. Trong cấu hình Multi-AZ, các bản snapshot và sao lưu tự động được thực hiện trên replicas để tránh tạm dừng I/O trên trường hợp DB chính.  Hỗ trợ Read Replicas cho Multi-AZ:  Amazon RDS Read Replicas cho MySQL, MariaDB, PostgreSQL và Oracle hỗ trợ các triển khai Multi-AZ. Kết hợp Read Replicas với Multi-AZ cho phép bạn xây dựng một chiến lược phục hồi thảm họa chắc chắn và đơn giản hóa quá trình nâng cấp động cơ cơ sở dữ liệu của bạn. Một read snapshot ở một AZ khác so với cơ sở dữ liệu nguồn có thể được sử dụng như một cơ sở dữ liệu dự phòng và được thúc đẩy để trở thành cơ sở dữ liệu sản xuất mới trong trường hợp có sự cố vùng. Điều này cho phép bạn mở rộng khả năng đọc đồng thời cũng như có Multi-AZ cho DR.  Quy trình thực hiện các hoạt động bảo trì như sau:  Thực hiện các hoạt động trên replicas. Thúc đẩy replicas để trở thành primary . Thực hiện các hoạt động trên replicas mới (primary bị hạ cấp).  Bạn có thể nâng cấp thủ công một DB instance lên phiên bản động cơ DB được hỗ trợ từ AWS Console.  Theo mặc định, nâng cấp sẽ có hiệu lực trong cửa sổ bảo trì tiếp theo. Bạn có thể tùy chọn buộc nâng cấp ngay lập tức. Trong các triển khai Multi-AZ, nâng cấp phiên bản sẽ được thực hiện trên cả primary và replicas cùng một lúc, gây ra sự cố cho cả hai DB Instance. Đảm bảo các SG và NACL sẽ cho phép máy chủ ứng dụng của bạn giao tiếp với cả primary và replicas.  Read Replicas Read Replicas được sử dụng cho các cơ sở dữ liệu có tải đọc nhiều và sao chép là không đồng bộ.\nRead Replicas được sử dụng để chia sẻ và giảm tải công việc làm.\nRead Replicas cung cấp khả năng khôi phục dữ liệu ở chế độ chỉ đọc.\nRead Replicas được tạo ra từ một bản snapshot của bản chính.\nPhải bật tính năng sao lưu tự động trên bản chính (thời gian lưu trữ \u0026gt; 0).\nChỉ được hỗ trợ cho các động cơ lưu trữ cơ sở dữ liệu giao dịch (InnoDB không phải InnoDB).\nRead Replicas có sẵn cho MySQL, PostgreSQL, MariaDB, Oracle, Aurora và SQL Server.\nĐối với các động cơ cơ sở dữ liệu MySQL, MariaDB, PostgreSQL và Oracle, Amazon RDS tạo ra một bản thứ hai sử dụng bản snapshot của bản chính.\nSau đó, nó sử dụng sao chép không đồng bộ tự nhiên của các động cơ để cập nhật Read Replicas mỗi khi có sự thay đổi đối với bản chính.\nAmazon Aurora sử dụng một lớp lưu trữ ảo được hỗ trợ bởi SSD, được thiết kế đặc biệt cho tải công việc làm cơ sở dữ liệu.\nBạn có thể tạo snapshot của các Read Replicas PostgreSQL nhưng không thể bật sao lưu tự động.\nBạn có thể bật sao lưu tự động trên các Read Replicas MySQL và MariaDB.\nBạn có thể bật viết trên các Read Replicas MySQL và MariaDB.\nBạn có thể có tối đa 5 Read Replicas của một cơ sở dữ liệu sản xuất.\nBạn không thể có nhiều hơn bốn bản sao tham gia trong chuỗi sao chép.\nBạn có thể có Read Replicas của các Read Replicas cho MySQL và MariaDB nhưng không cho PostgreSQL.\nCấu hình Read Replicas có thể được thiết lập từ Giao diện AWS hoặc API.\nBạn có thể chỉ định khu vực ra đời của Read Replicas.\nLoại lưu trữ và lớp bản chính của các Read Replicas có thể khác nhau so với nguồn, nhưng tính toán phải ít nhất là hiệu suất của nguồn.\nBạn không thể thay đổi động cơ cơ sở dữ liệu.\nTrong trường hợp mất kết nối đa khu vực, các Read Replicas được chuyển sang bản chính mới.\nRead Replicas phải được xóa một cách tường tận.\nNếu một bản chính bị xóa mà không xóa các bản sao, mỗi bản sao trở thành một bản chính độc lập tại một khu vực một khu vực.\nBạn có thể thăng cấp một Read Replicas thành bản chính.\nViệc thăng cấp Read Replicas mất vài phút.\nCác Read Replicas được thăng cấp giữ lại:\n Thời gian lưu trữ sao lưu. Cửa sổ sao lưu. Nhóm tham số cơ sở dữ liệu. Các Read Replicas hiện có vẫn hoạt động như bình thường.  Mỗi Read Replicas có một điểm cuối DNS riêng.\nCác Read Replicas có thể được bật đa khu vực và bạn có thể tạo các Read Replicas từ các cơ sở dữ liệu nguồn đa khu vực.\nCác Read Replicas có thể nằm ở khu vực khác (sử dụng sao chép không đồng bộ).\nCấu hình này có thể được sử dụng để tập trung dữ liệu từ các khu vực khác nhau cho mục đích phân tích.\nDB Snapshots DB Snapshots là các tình huống do người dùng khởi tạo và cho phép bạn sao lưu DB instance của bạn ở trong một trạng thái xác định bất kỳ thường xuyên như bạn muốn, sau đó khôi phục về trạng thái cụ thể đó.\nKhông thể sử dụng để khôi phục tại điểm thời gian cụ thể.\nCác Snapshot được lưu trữ trên S3.\nSnapshot sẽ tồn tại trên S3 cho đến khi bị xóa bằng cách thủ công.\nSao lưu được thực hiện trong một khoảng thời gian đã được định.\nI/O tạm ngừng trong thời gian sao lưu và có thể làm tăng độ trễ (áp dụng cho RDS chỉ có một vùng khu vực).\nCác DB Snapshot được thực hiện bằng cách thủ công sẽ được lưu trữ ngay cả sau khi DB instance RDS bị xóa.\nCác DB được khôi phục sẽ luôn là một DB instance RDS mới với một điểm cuối DNS mới.\nCó thể khôi phục lên đến 5 phút trước.\nChỉ có các tham số DB mặc định và các nhóm bảo mật được khôi phục - bạn phải liên kết các tham số DB và SG khác một cách thủ công.\nNên nên chụp một Snapshot cuối cùng trước khi xóa một DB instance RDS.\nSnapshot có thể chia sẻ với các tài khoản AWS khác.\nCác phương pháp Có sẵn cho Sự có sẵn cao cấp cho Cơ sở dữ liệu Nếu có thể, hãy chọn DynamoDB thay vì RDS vì tính chịu lỗi tích hợp.\nNếu không thể sử dụng DynamoDB, hãy chọn Aurora vì tính dự phòng và tính năng khôi phục tự động.\nNếu không thể sử dụng Aurora, hãy chọn Multi-AZ RDS.\nCác sao lưu RDS thường xuyên có thể bảo vệ trước sự hỏng hoặc sự cố dữ liệu và chúng không ảnh hưởng đến hiệu suất triển khai Multi-AZ.\nSao lưu dự phòng khu vực cũng là một lựa chọn nhưng không được đảm bảo sẽ nhất quán mạnh mẽ.\nNếu cơ sở dữ liệu chạy trên EC2, bạn phải tự thiết kế tính sẵn có.\nDi chuyển dữ liệu Dịch vụ Di chuyển Cơ sở dữ liệu AWS giúp bạn di chuyển cơ sở dữ liệu vào AWS một cách nhanh chóng và an toàn.\nSử dụng kèm với Công cụ Chuyển đổi Schema (SCT) để di chuyển cơ sở dữ liệu vào RDS AWS hoặc cơ sở dữ liệu dựa trên EC2.\nCơ sở dữ liệu nguồn vẫn hoạt động hoàn toàn trong quá trình di chuyển, giảm thiểu thời gian chết cho các ứng dụng phụ thuộc vào cơ sở dữ liệu.\nDịch vụ Di chuyển Cơ sở dữ liệu AWS có thể di chuyển dữ liệu của bạn tới và từ hầu hết các cơ sở dữ liệu thương mại và nguồn mở phổ biến.\nCông cụ Chuyển đổi Schema có thể sao chép các schema cơ sở dữ liệu cho các di chuyển đồng nhất (cùng loại cơ sở dữ liệu) và chuyển đổi các schema cho các di chuyển không đồng nhất (khác loại cơ sở dữ liệu).\nDMS được sử dụng cho các chuyển đổi nhỏ hơn, đơn giản hơn và hỗ trợ MongoDB và DynamoDB.\nSCT được sử dụng cho các bộ dữ liệu lớn hơn, phức tạp hơn như các kho dữ liệu.\nDMS có chức năng sao chép từ nơi trên cơ sở vào AWS hoặc vào Snowball hoặc S3.\nTheo dõi, Ghi log và Báo cáo Bạn có thể sử dụng các công cụ theo dõi tự động sau để theo dõi Amazon RDS và báo cáo khi có điều gì đó sai:\n Sự kiện Amazon RDS - Đăng ký sự kiện Amazon RDS để được thông báo khi có thay đổi với DB instance, DB snapshot, nhóm tham số DB hoặc nhóm bảo mật DB. Các tệp ghi cơ sở dữ liệu - Xem, tải xuống hoặc xem các tệp ghi cơ sở dữ liệu bằng cách sử dụng giao diện Amazon RDS hoặc các thao tác API Amazon RDS. Bạn cũng có thể truy vấn một số tệp ghi cơ sở dữ liệu được nạp vào các bảng cơ sở dữ liệu. Amazon RDS Enhanced Monitoring - Xem các số liệu thống kê thời gian thực cho hệ điều hành. Amazon RDS Performance Insights - Đánh giá tải trên cơ sở dữ liệu của bạn và xác định khi nào và ở đâu cần thực hiện. Amazon RDS Recommendations - Xem các khuyến nghị tự động cho các tài nguyên cơ sở dữ liệu, chẳng hạn như các DB instance, bản sao đọc và nhóm tham số DB.  Ngoài ra, Amazon RDS tích hợp với Amazon CloudWatch, Amazon EventBridge và AWS CloudTrail cho khả năng theo dõi bổ sung:\n Số liệu CloudWatch - Amazon RDS tự động gửi số liệu đến CloudWatch mỗi phút cho mỗi cơ sở dữ liệu hoạt động. Bạn không phải trả thêm phí cho số liệu Amazon RDS trong CloudWatch. Các cảnh báo CloudWatch - Bạn có thể theo dõi một số liệu Amazon RDS duy nhất trong một khoảng thời gian cụ thể. Sau đó, bạn có thể thực hiện một hoặc nhiều hành động dựa trên giá trị của số liệu đối với ngưỡng bạn đặt. Các tệp ghi CloudWatch - Hầu hết các động cơ DB cho phép bạn theo dõi, lưu trữ và truy cập các tệp ghi cơ sở dữ liệu của bạn trong CloudWatch Logs. Các sự kiện CloudWatch và Amazon EventBridge - Bạn có thể tự động hóa các dịch vụ AWS và phản ứng với các sự kiện hệ thống như vấn đề sẵn sàng ứng dụng hoặc thay đổi tài nguyên. Sự kiện từ các dịch vụ AWS được gửi đến CloudWatch Events và EventBridge gần như trong thời gian thực. Bạn có thể viết các quy tắc đơn giản để chỉ định các sự kiện mà bạn quan tâm và các hành động tự động nào nên thực hiện khi một sự kiện phù hợp với quy tắc. AWS CloudTrail - Bạn có thể xem một hồ sơ các hành động được thực hiện bởi người dùng, vai trò hoặc dịch vụ AWS trong Amazon RDS. CloudTrail ghi lại tất cả các cuộc gọi API cho Amazon RDS như sự kiện. Các cuộc gọi này bao gồm cuộc gọi từ giao diện Amazon RDS và từ các cuộc gọi mã vào các thao tác API Amazon RDS. Nếu bạn tạo một dãy, bạn có thể bật giao hàng liên tục của các sự kiện CloudTrail đến một xô Amazon S3, bao gồm các sự kiện cho Amazon RDS. Nếu bạn không cấu hình một dãy, bạn vẫn có thể xem các sự kiện gần đây nhất trong bảng điều khiển CloudTrail trong Lịch sử sự kiện.  "
},
{
	"uri": "/vi/2-prerequiste/1-create-vpc/",
	"title": "Tạo VPC",
	"tags": [],
	"description": "",
	"content": "Để tạo một VPC, các subnet và các tài nguyên VPC khác bằng cách sử dụng giao diện điều khiển Sử dụng thủ tục sau để tạo một VPC cùng với các tài nguyên VPC bổ sung mà bạn cần để chạy ứng dụng của bạn, chẳng hạn như các subnet, route table, Internet gateway và cổng NAT. Ví dụ về cấu hình VPC, xem trong các ví dụ VPC.\n Mở giao diện điều khiển Amazon VPC tại đây.   Trên bảng điều khiển VPC, chọn Create VPC.\n  Cho phần Resources to create, chọn VPC and more.\n   Giữ nguyên tùy chọn Name tag auto-generation để tạo các nhãn Tên cho các tài nguyên VPC, hoặc bỏ chọn nó để cung cấp các nhãn Tên của bạn cho các tài nguyên VPC.\n  Đối với dãy địa chỉ IPv4 CIDR, nhập một dãy địa chỉ IPv4 cho VPC. VPC phải có một dãy địa chỉ IPv4.\n  (Tùy chọn) Để hỗ trợ lưu lượng IPv6, chọn IPv6 CIDR block, dãy IPv6 do Amazon cung cấp.\n  Chọn một tùy chọn Tenancy. Tùy chọn này xác định xem các máy EC2 mà bạn khởi chạy vào VPC sẽ chạy trên phần cứng được chia sẻ với các tài khoản AWS khác hay trên phần cứng được dành riêng cho bạn. Nếu bạn chọn Tenancy của VPC là Default, các máy EC2 được khởi chạy vào VPC này sẽ sử dụng thuộc tính Tenancy được chỉ định khi bạn khởi chạy máy \u0026ndash; Xem thêm thông tin trong Hướng dẫn người dùng Amazon EC2 cho các phiên bản Linux. Nếu bạn chọn Tenancy của VPC là Dedicated, các máy sẽ luôn chạy như Các Máy Dành Riêng trên phần cứng được dành riêng cho bạn. Nếu bạn đang sử dụng AWS Outposts, Outpost của bạn cần kết nối riêng tư; bạn phải sử dụng Tenancy mặc định.\n  Đối với Number of Availability Zones (AZs), chúng tôi đề xuất bạn cung cấp các subnet trong ít nhất hai Availability Zones cho môi trường sản xuất. Để chọn AZ cho các subnet của bạn, mở rộng Customize AZs. Nếu không, hãy để AWS chọn giúp bạn.\n   Để cấu hình các subnet của bạn, chọn các giá trị cho Number of public subnets và Number of private subnets. Để chọn các dãy địa chỉ IP cho các subnet của bạn, mở rộng Customize subnets CIDR blocks. Nếu không, hãy để AWS chọn giúp bạn.\n  (Tùy chọn) Nếu các tài nguyên trong một subnet riêng cần truy cập Internet công cộng qua IPv4, cho cổng NAT gateways, chọn số AZ mà bạn muốn tạo NAT gateways. Trong môi trường sản xuất, chúng tôi đề xuất bạn triển khai một NAT gateway trong mỗi AZ với các tài nguyên cần truy cập Internet công cộng. Lưu ý rằng có một chi phí liên quan đến NAT gateways. Để biết thêm thông tin, xem Giá cả.\n  (Tùy chọn) Nếu các tài nguyên trong một subnet riêng cần truy cập Internet công cộng qua IPv6, cho cổng Egress only internet gateway, chọn Yes.\n  (Tùy chọn) Nếu bạn cần truy cập Amazon S3 trực tiếp từ VPC của bạn, chọn VPC endpoints, S3 Gateway. Điều này tạo ra một điểm cuối VPC cổng cho Amazon S3. Để biết thêm thông tin, xem Cổng kết nối VPC trong Hướng dẫn AWS PrivateLink.\n  (Tùy chọn) Đối với tùy chọn DNS, cả hai tùy chọn về giải quyết tên miền đều được kích hoạt mặc định. Nếu mặc định không đáp ứng nhu cầu của bạn, bạn có thể vô hiệu hóa các tùy chọn này.\n  (Tùy chọn) Để thêm một nhãn cho VPC của bạn, mở rộng Additional tags, chọn Add new tag, và nhập một khóa nhãn và giá trị nhãn.\n  Trong bảng Preview, bạn có thể xem biểu đồ quan hệ giữa các tài nguyên VPC mà bạn đã cấu hình. Các đường mass nét đại diện cho mối quan hệ giữa các tài nguyên. Đường nét đứt đoạn đại diện cho lưu lượng mạng đến NAT gateways, cổng Internet và điểm cuối cổng. Sau khi bạn tạo VPC, bạn có thể xem các tài nguyên trong VPC của mình ở định dạng này bất kỳ lúc nào bằng cách sử dụng tab Bản đồ tài nguyên. Để biết thêm thông tin, xem Biểu đồ các tài nguyên trong VPC của bạn.\n  Khi bạn hoàn tất cấu hình VPC của mình, hãy chọn Create VPC.\n  Thay đổi thuộc tính địa chỉ Public IPv4 cho subnet của bạn Mặc định, subnet không mặc định có thuộc tính địa chỉ Public IPv4 được đặt thành sai (false), và subnet mặc định có thuộc tính này được đặt thành đúng (true). Một ngoại lệ là một subnet không mặc định được tạo ra bằng cách sử dụng hướng dẫn của Amazon EC2 trong trình tạo thể hiện - trình tạo sẽ đặt thuộc tính này thành đúng. Bạn có thể thay đổi thuộc tính này bằng cách sử dụng giao diện Amazon VPC.\nĐể thay đổi hành vi địa chỉ Public IPv4 của subnet của bạn\n  Mở giao diện Amazon VPC tại https://console.aws.amazon.com/vpc/.\n  Trong bảng điều hướng, chọn subnet (Subnets).\n  Chọn subnet của bạn và chọn Hành động (Actions), chỉnh sửa cài đặt subnet (Edit subnet settings).  Ô kiểm Bật tự động gán địa chỉ Public IPv4 (Enable auto-assign public IPv4 address), nếu được chọn, sẽ yêu cầu một địa chỉ Public IPv4 cho tất cả các thể hiện được khởi chạy vào subnet được chọn. Chọn hoặc bỏ chọn ô kiểm theo yêu cầu, sau đó chọn Lưu (Save).  "
},
{
	"uri": "/vi/2-prerequiste/",
	"title": "Các bước chuẩn bị",
	"tags": [],
	"description": "",
	"content": "Các bước chuẩn bị  Tạo VPC Tạo subnet Tạo Security Group cho Amazon EC2 Tạo Security Group cho DB instance Tạo DB Subnet group  "
},
{
	"uri": "/vi/2-prerequiste/2-create-ec2-sg/",
	"title": "Tạo EC2 Security Group",
	"tags": [],
	"description": "",
	"content": "Để tạo một Security Group trên AWS với các cổng 80, 443, 5000 và 22, bạn có thể sử dụng các bước sau:   Đăng nhập vào bảng điều khiển AWS.\n  Trong menu chính, chọn Services (Dịch vụ) và sau đó chọn EC2 trong phần Compute (Máy tính).\n  Trong bên trái, bạn sẽ thấy Network \u0026amp; Security (Mạng và Bảo mật). Chọn Security Groups (Các nhóm bảo mật).\n  Nhấp vào nút Create Security Group (Tạo nhóm bảo mật) để bắt đầu quá trình tạo.\n  Điền các thông tin cơ bản như tên và mô tả cho Security Group của bạn.  Trong phần Inbound rules (Luật đến), thêm các luật sau đây để cho phép truy cập vào các cổng cụ thể:  HTTP (80): Chọn HTTP trong danh sách hoặc nhập cổng 80. HTTPS (443): Chọn HTTPS trong danh sách hoặc nhập cổng 443. Custom TCP Rule (5000): Chọn Custom TCP Rule và nhập cổng 5000. SSH (22): Chọn SSH trong danh sách hoặc nhập cổng 22.    Sau khi thêm các luật, nhấp vào nút Create security group (Tạo nhóm bảo mật).  Security Group của bạn đã được tạo và bạn có thể gán nó cho các tài nguyên EC2 của bạn để quản lý quyền truy cập vào các cổng này.  "
},
{
	"uri": "/vi/3-create-ec2/",
	"title": "Tạo EC2 instance",
	"tags": [],
	"description": "",
	"content": "Tạo một Instance trên AWS Bạn có thể tạo một instance Linux bằng cách sử dụng AWS Management Console theo hướng dẫn sau đây. Hướng dẫn này được thiết kế để giúp bạn tạo instance đầu tiên một cách nhanh chóng, nên nó không bao gồm tất cả các tùy chọn có thể có. Để biết thông tin về các tùy chọn nâng cao, hãy xem Hướng dẫn tạo instance bằng cách sử dụng hướng dẫn mới về Launch Instance. Để biết thông tin về cách khác để tạo instance của bạn, hãy xem Hướng dẫn tạo instance của bạn.\n  Truy cập AWS Console\n Mở trình duyệt và truy cập vào Amazon EC2 console tại https://console.aws.amazon.com/ec2/.    Chọn Launch instance\n Tại màn hình dashboard của EC2 console, trong hộp Launch instance, chọn Launch instance, sau đó chọn Launch instance từ các tùy chọn xuất hiện.    Đặt tên cho instance\n Dưới phần Name and tags, cho Name, nhập tên mô tả cho instance của bạn.    Chọn hình ảnh (Amazon Machine Image - AMI)\n Dưới phần Application and OS Images (Amazon Machine Image), làm theo các bước sau đây:  Chọn Quick Start, sau đó chọn Amazon Linux. Đây là hệ điều hành (OS) cho instance của bạn. Từ Amazon Machine Image (AMI), chọn một phiên bản HVM của Amazon Linux 2023. Lưu ý rằng các AMI này được đánh dấu là Free tier eligible. Một Amazon Machine Image (AMI) là một cấu hình cơ bản dùng làm mẫu cho instance của bạn.      Chọn loại instance\n Dưới phần Instance type, từ danh sách Instance type, bạn có thể chọn cấu hình phần cứng cho instance của bạn. Chọn loại instance t2.micro, mà mặc định đã được chọn. Loại instance t2.micro đủ điều kiện để sử dụng miễn phí trong AWS Free Tier. Tại các khu vực mà loại t2.micro không có sẵn, bạn có thể sử dụng loại t3.micro trong AWS Free Tier. Để biết thêm thông tin, hãy xem AWS Free Tier.    Chọn Key Pair\n  Dưới phần Key pair (login), cho Key pair name, chọn key pair mà bạn đã tạo khi cài đặt.\n  Cảnh báo: Đừng chọn Proceed without a key pair (Không được khuyến nghị). Nếu bạn tạo instance mà không có key pair, bạn sẽ không thể kết nối vào nó.\n    Cấu hình Security Group\n  Bên cạnh Network settings, chọn Edit. Đối với Security group name, bạn sẽ thấy rằng hướng dẫn đã tạo và chọn một security group cho bạn. Bạn có thể sử dụng security group này hoặc bạn có thể chọn security group mà bạn đã tạo khi cài đặt bằng các bước sau đây:\n Chọn Select existing security group. Từ Common security groups, chọn security group của bạn từ danh sách các security group hiện có.      Xác nhận và khởi động instance\n Giữ nguyên các lựa chọn mặc định cho các cài đặt khác của instance của bạn. Xem lại bản tóm tắt về cấu hình instance của bạn trong Summary panel, và khi bạn đã sẵn sàng, chọn Launch instance.    Xác nhận và kiểm tra\n Một trang xác nhận sẽ thông báo rằng instance của bạn đang được khởi động. Chọn View all instances để đóng trang xác nhận và trở lại giao diện console. Trên màn hình Instances, bạn có thể xem trạng thái của quá trình khởi động. Có một thời gian ngắn để instance được khởi động. Khi bạn khởi động instance, trạng thái ban đầu của nó là pending. Sau khi instance khởi động, trạng thái của nó sẽ thay đổi thành running và nó sẽ nhận được một tên DNS công cộng. Nếu cột Public IPv4 DNS bị ẩn, hãy chọn biểu tượng cài đặt (Biểu tượng cài đặt) ở góc trên bên phải, bật Public IPv4 DNS và chọn Confirm. Có thể mất vài phút để instance sẵn sàng để bạn kết nối vào. Hãy kiểm tra xem instance của bạn đã vượt qua kiểm tra trạng thái; bạn có thể xem thông tin này trong cột Status check.    Kết nối vào EC2 Instance bằng SSH sử dụng Mobaxterm Để kết nối vào một Amazon Elastic Compute Cloud (EC2) instance thông qua SSH sử dụng Mobaxterm, bạn cần thực hiện các bước sau:\n  Tải và Cài Đặt Mobaxterm:\n Đầu tiên, tải Mobaxterm từ trang web chính thức: Mobaxterm Website. Sau khi tải xong, cài đặt Mobaxterm trên máy tính của bạn.    Mở Mobaxterm:\n Khởi động Mobaxterm sau khi cài đặt xong.    Tạo Kết Nối SSH Mới:\n Trong Mobaxterm, bạn có thể tạo kết nối SSH mới bằng cách nhấp vào biểu tượng Session ở góc trên bên trái của giao diện.    Cấu Hình Kết Nối SSH:\n Trong cửa sổ cấu hình, điền các thông tin sau:  Remote Host: Điền địa chỉ IP hoặc tên miền của EC2 instance bạn muốn kết nối. Port: Mặc định là 22 (port SSH). User: Tên người dùng trên EC2 instance (thông thường là ec2-user hoặc ubuntu). Advanced SSH settings: Ở đây, bạn có thể cung cấp khóa SSH (private key) nếu bạn sử dụng khóa thay vì mật khẩu.      Kết Nối vào EC2 Instance:\n Nhấp vào nút OK để lưu cấu hình và sau đó nhấp vào biểu tượng kết nối để mở kết nối SSH vào EC2 instance của bạn.    Nhập Mật Khẩu (Nếu Có):\n Nếu bạn sử dụng mật khẩu thay vì khóa SSH, Mobaxterm sẽ yêu cầu bạn nhập mật khẩu người dùng trên EC2 instance.    Kết Nối Thành Công:\n  Nếu tất cả thông tin đúng, bạn sẽ kết nối thành công vào EC2 instance và có thể thực hiện các tác vụ trên máy chủ từ xa.\n  Nhớ rằng bạn cần phải có quyền truy cập vào EC2 instance và đã cấu hình Security Group của nó cho phép kết nối SSH từ địa chỉ IP của bạn.\n    "
},
{
	"uri": "/vi/2-prerequiste/3-create-db-sg/",
	"title": "Tạo RDS Security group",
	"tags": [],
	"description": "",
	"content": "Tạo Security Group cho DB instance trong AWS Chúng ta có thể sử dụng Security Group để kiểm soát truy cập vào DB instance riêng tư trong môi trường AWS. Dưới đây là cách tạo một Security Group cho DB instance trong giao diện VPC:\n  Trong giao diện VPC, chọn Security group.\n  Chọn Create security group để tạo một Security Group mới cho DB instance riêng tư.\n  Đặt tên cho Security Group:\n Security group name: Nhập tên Security Group. Description: Nhập mô tả cho Security Group.     Chọn VPC đã tạo để liên kết Security Group với VPC.\n  Tiến hành cấu hình các Inbound rules để quyết định nguồn nào được phép truy cập DB instance. Ví dụ:\n Chọn MYSQL/Aurora và cổng 3306. Custom source: Nhập ID của Security Group của Amazon EC2 instance mà bạn muốn kết nối với DB instance.    Sau khi cấu hình xong, chọn Create security group để hoàn thành quá trình tạo Security Group cho DB instance.  Như vậy, bạn đã tạo thành công một Security Group cho DB instance riêng tư trong môi trường AWS.\n Lưu ý: Không khuyến khích chia sẻ Security Group giữa DB instance và Amazon EC2 instance để đảm bảo an toàn và quản lý riêng biệt cho từng tài nguyên.\n "
},
{
	"uri": "/vi/2-prerequiste/4-create-db-subnetgroup/",
	"title": "Tạo DB Subnet Group",
	"tags": [],
	"description": "",
	"content": "Tạo DB Subnet Group trên AWS Để tạo DB Subnet Group trên AWS, làm theo các bước sau:\n  Truy cập vào AWS Management Console.\n  Tìm và chọn dịch vụ Amazon RDS.\n  Trong menu điều hướng, chọn Subnet groups.\n  Chọn Create DB Subnet Group.\n   Trong giao diện Create DB Subnet Group:\n  Đặt tên cho subnet group của bạn trong trường Name.\n  Nhập mô tả cho subnet group của bạn trong trường Description.\n  Chọn Virtual Private Cloud (VPC) mặc định hoặc VPC bạn đã tạo.\n     Trong phần Add subnets, chọn các Availability Zones (AZ) chứa các subnets trong mục Availability Zones, sau đó chọn các subnets trong mục Subnets.\n  Nhấn nút Create để hoàn thành quá trình tạo DB Subnet Group.\n  Lưu ý: Nếu bạn đã bật Local Zone, bạn có thể chọn một nhóm Availability Zone trên trang Create DB Subnet Group. Trong trường hợp này, hãy chọn nhóm Availability Zone, các Availability Zones và Subnets tương ứng.\nSau khi hoàn thành, DB Subnet Group mới của bạn sẽ xuất hiện trong danh sách các DB Subnet Group trên giao diện RDS console. Bạn có thể chọn DB Subnet Group để xem chi tiết, bao gồm danh sách các subnets được kết nối với nhóm này, trong phần chi tiết ở dưới cùng của cửa sổ.\n"
},
{
	"uri": "/vi/4-create-rds/",
	"title": "Tạo RDS database instance",
	"tags": [],
	"description": "",
	"content": "Cài đặt Git trên Amazon EC2 2023 Dưới đây là hướng dẫn cài đặt Git trên một máy ảo Amazon EC2 chạy Amazon Linux năm 2023 sử dụng các bước cơ bản.\n Cập nhật Gói Hệ thống  Trước tiên, hãy cập nhật các gói hệ thống của bạn để đảm bảo rằng bạn đang sử dụng phiên bản mới nhất:\nsudo dnf update -y Tìm Gói Git. Sử dụng lệnh sau để tìm gói Git trong kho lưu trữ:  sudo dnf search git Cài đặt Git. Sau khi tìm được gói Git, bạn có thể cài đặt nó bằng lệnh sau:  sudo dnf install git -y Xác minh Cài đặt Git. Cuối cùng, hãy kiểm tra phiên bản Git đã được cài đặt thành công:  git --version Nếu bạn thấy phiên bản Git xuất hiện, điều đó có nghĩa là cài đặt đã hoàn tất.\nCài đặt Node.js trên Amazon EC2 Linux 2023   Dưới đây là một tập lệnh Bash để cài đặt Node.js trên Amazon EC2 Linux:  #!/bin/bash\r# Màu sắc cho định dạng\rGREEN=\u0026#39;\\033[0;32m\u0026#39;\rNC=\u0026#39;\\033[0m\u0026#39; # Không màu\r# Kiểm tra xem NVM đã được cài đặt chưa\rif ! command -v nvm \u0026amp;\u0026gt; /dev/null; then\r# Bước 1: Cài đặt nvm\rcurl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.0/install.sh | bash\rsource ~/.nvm/nvm.sh\rfi\r# Xác minh việc cài đặt nvm\rnvm --version\r# Cài đặt phiên bản LTS của Node.js\rnvm install --lts\r# Sử dụng phiên bản LTS đã cài đặt\rnvm use --lts\r# Xác minh cài đặt Node.js và npm\rnode -v\rnpm -v\r# Bước 4: Tạo tệp package.json (nếu chưa tồn tại)\rif [ ! -f package.json ]; then\rnpm init -y\recho -e **${GREEN}Đã tạo tệp package.json.${NC}**\rfi\r# Bước 5: Cài đặt các gói npm cần thiết\recho -e **Đang cài đặt các gói npm cần thiết...**\rnpm install express dotenv express-handlebars body-parser mysql\r# Bước 6: Cài đặt nodemon như một phụ thuộc phát triển\recho -e **Đang cài đặt nodemon như một phụ thuộc phát triển...**\rnpm install --save-dev nodemon\rnpm install -g nodemon\r# Bước 7: Thêm kịch bản npm start vào package.json\rif ! grep -q \u0026#39;**start**:\u0026#39; package.json; then\rnpm set-script start **index.js** # Thay thế **your-app.js** bằng tệp điểm nhập của bạn\recho -e **${GREEN}Đã thêm kịch bản npm start vào package.json.${NC}**\rfi\recho -e **${GREEN}Cài đặt hoàn tất. Bây giờ bạn có thể bắt đầu xây dựng và chạy ứng dụng Node.js của mình bằng \u0026#39;npm start\u0026#39;.${NC}** Tạo một DB Instance trên AWS Bạn có thể tạo một DB Instance bằng cách sử dụng AWS Management Console với tùy chọn Easy create được bật hoặc không được bật. Khi Easy create được bật, bạn chỉ cần chỉ định loại DB engine, kích thước DB Instance và định danh DB Instance. Easy create sử dụng các thiết lập mặc định cho các tùy chọn cấu hình khác. Khi Easy create không được bật, bạn phải chỉ định nhiều tùy chọn cấu hình hơn khi bạn tạo một cơ sở dữ liệu, bao gồm các tùy chọn về khả dụng, bảo mật, sao lưu và bảo trì.\nLưu ý: Trong thủ tục dưới đây, tùy chọn Standard create được bật và Easy create không được bật. Thủ tục này sử dụng MySQL làm ví dụ.\nĐối với ví dụ sử dụng Easy create để hướng dẫn bạn tạo và kết nối các DB Instance mẫu cho từng engine, xem Bắt đầu với Amazon RDS.\nĐể tạo một DB Instance:\n  Đăng nhập vào AWS Management Console và mở Amazon RDS console tại https://console.aws.amazon.com/rds/.\n  Ở góc trên bên phải của Amazon RDS console, chọn khu vực AWS mà bạn muốn tạo DB Instance.\n  Trong khung điều hướng, chọn Databases.\n  Chọn Create database, sau đó chọn Standard create.\n   Đối với Engine type, chọn MariaDB, Microsoft SQL Server, MySQL, Oracle, hoặc PostgreSQL. Trong ví dụ này, chúng ta sử dụng Microsoft SQL Server.\n  Đối với Database management type, nếu bạn sử dụng Oracle hoặc SQL Server, chọn Amazon RDS hoặc Amazon RDS Custom.\n  Đối với Edition, nếu bạn sử dụng Oracle hoặc SQL Server, chọn phiên bản của DB engine mà bạn muốn sử dụng.\n  Đối với Version, chọn phiên bản của engine.\n  Trong phần Templates, chọn mẫu phù hợp với trường hợp sử dụng của bạn. Nếu bạn chọn Production, các tùy chọn sau sẽ được chọn trước trong bước sau:\n Tùy chọn Multi-AZ failover Tùy chọn lưu trữ Provisioned IOPS SSD (io1) Tùy chọn bảo vệ khỏi xóa  Chúng tôi khuyên bạn nên sử dụng những tính năng này cho môi trường sản xuất.\n  Lưu ý: Các lựa chọn mẫu có thể thay đổi theo phiên bản.\n Để nhập mật khẩu chính của bạn, làm theo các bước sau:\n Trong phần Settings, mở Credential Settings. Nếu bạn muốn chỉ định một mật khẩu, hãy bỏ chọn hộp kiểm Auto generate a password nếu nó đã được chọn. (Tùy chọn) Thay đổi giá trị Master username. Nhập cùng mật khẩu trong Master password và Confirm password. (Tùy chọn) Cài đặt kết nối với một tài nguyên tính toán cho DB Instance này.     Bạn có thể cấu hình kết nối giữa một Amazon EC2 instance và DB Instance mới trong quá trình tạo DB Instance. Để biết thêm thông tin, xem Cấu hình kết nối mạng tự động với một EC2 instance.\n  Trong phần Connectivity dưới VPC security group (firewall), nếu bạn chọn Create new, một nhóm bảo mật VPC sẽ được tạo ra với một luật đăng nhập cho phép địa chỉ IP máy tính cục bộ của bạn truy cập vào cơ sở dữ liệu.\n   Đối với các phần còn lại, chỉ định các thiết lập DB Instance của bạn. Để biết thêm thông tin về mỗi thiết lập, xem Settings for DB instances.\n  Chọn Create database.\n   Nếu bạn chọn sử dụng mật khẩu được tạo tự động, nút View credential details sẽ xuất hiện trên trang Databases.\n  Để xem tên người dùng chính và mật khẩu cho DB Instance, chọn View credential details.\n  Để kết nối vào DB Instance dưới tên người dùng chính, sử dụng tên người dùng và mật khẩu được hiển thị.\n  Quan trọng: Bạn không thể xem lại mật khẩu người dùng chính. Nếu bạn không ghi lại nó, bạn có thể phải thay đổi nó. Nếu bạn cần thay đổi mật khẩu người dùng chính sau khi DB Instance đã sẵn sàng, bạn có thể sửa đổi DB Instance để làm điều này. Để biết thêm thông tin về việc sửa đổi một DB Instance, xem Modifying an Amazon RDS DB Instance.\nĐối với Databases, chọn tên của DB Instance mới.  Trên console RDS, thông tin về DB Instance mới sẽ xuất hiện. DB Instance có trạng thái Creating cho đến khi nó được tạo và sẵn sàng sử dụng. Khi trạng thái chuyển sang Available, bạn có thể kết nối vào DB Instance. Tùy thuộc vào lớp DB Instance và lưu trữ được cấp phát, có thể mất vài phút để DB Instance mới có sẵn.  Kiểm tra RDS   Trong trang chi tiết của instance RDS, bạn có thể tìm thấy các thông tin liên quan đến kết nối như Endpoint (điểm kết nối), Port (cổng), và Username (tên người dùng). Điểm kết nối (Endpoint) là URL hoặc địa chỉ IP mà bạn sử dụng để kết nối tới cơ sở dữ liệu RDS.  Xem Log và Sự kiện trên AWS RDS Để theo dõi Log và Sự kiện trên Amazon RDS (Relational Database Service), bạn có thể thực hiện các bước sau:\n  Đăng nhập vào AWS Management Console.\n  Chọn dịch vụ Amazon RDS từ bảng điều khiển AWS.\n  Chọn instance RDS mà bạn muốn xem Log và Sự kiện.\n  Trong trang chi tiết của instance, bạn sẽ thấy các tab sau:\n DB instance details: Hiển thị thông tin cơ bản về instance. Configuration: Cho phép bạn xem và thay đổi cấu hình của instance. Log \u0026amp; events: Đây là nơi bạn có thể xem Log và Sự kiện.    Nhấp vào tab Log \u0026amp; events. Tại đây, bạn có thể xem các log như:\n Error log: Ghi lại các lỗi xảy ra trên instance. General log: Ghi lại các hoạt động chung trên instance. Slow query log: Ghi lại các truy vấn chậm. Event log: Hiển thị các sự kiện quan trọng liên quan đến instance.    Bạn có thể tùy chỉnh các thiết lập xem Log và Sự kiện tại đây, chẳng hạn như khoảng thời gian bạn muốn xem log hoặc cài đặt thông báo qua email cho các sự kiện quan trọng.\n  Nhớ duyệt qua các log và sự kiện thường xuyên để theo dõi tình trạng của Amazon RDS instance của bạn và phát hiện sớm bất kỳ vấn đề nào.\nXem Bảo Trì và Sao Lưu AWS RDS Trong dịch vụ Amazon Web Services (AWS), Amazon Relational Database Service (RDS) cung cấp một cơ sở dữ liệu quan hệ quản lý dễ dàng và có khả năng tự động hóa nhiều tác vụ, bao gồm bảo trì và sao lưu cơ sở dữ liệu. Dưới đây là cách bạn có thể xem thông tin về bảo trì và sao lưu trong AWS RDS:\nXem Thông Tin Bảo Trì Để xem thông tin về bảo trì của một DB instance trong RDS, bạn có thể thực hiện các bước sau:\n  Đăng nhập vào AWS Management Console.\n  Chọn dịch vụ Amazon RDS trong danh sách các dịch vụ.\n  Trong bảng điều khiển RDS, chọn DB instance bạn quan tâm.\n  Trong trang quản lý DB instance, điều hướng đến tab Maintenance \u0026amp; backups (Bảo trì và sao lưu).\n  Tại đây, bạn sẽ thấy thông tin về lịch trình bảo trì, bao gồm các thời gian khi DB instance sẽ được tự động sao lưu và thực hiện công việc bảo trì. Bạn cũng có thể xem lịch sử các sự kiện bảo trì trước đó.\n  Xem Thông Tin Sao Lưu Để xem thông tin về sao lưu của DB instance trong AWS RDS, làm theo các bước sau:\n  Đăng nhập vào AWS Management Console.\n  Chọn dịch vụ Amazon RDS trong danh sách các dịch vụ.\n  Trong bảng điều khiển RDS, chọn DB instance bạn muốn kiểm tra.\n  Trong trang quản lý DB instance, điều hướng đến tab Maintenance \u0026amp; backups (Bảo trì và sao lưu).\n  Tại đây, bạn có thể xem thông tin về sao lưu tự động và sao lưu thủ công. Bạn cũng có thể cấu hình và quản lý các thiết lập sao lưu.\n  Nhớ luôn tuân theo các quy tắc và chính sách liên quan khi thực hiện bất kỳ tác vụ nào trên AWS RDS để đảm bảo an toàn và bảo mật dữ liệu của bạn.\n"
},
{
	"uri": "/vi/5-deploy-app/",
	"title": "Triển khai ứng dụng",
	"tags": [],
	"description": "",
	"content": "Triển khai ứng dụng  Để clone repository từ GitHub của AWS-First-Cloud-Journey, bạn có thể sử dụng lệnh sau:  git clone https://github.com/AWS-First-Cloud-Journey/AWS-FCJ-Management #Hướng dẫn cài đặt Node.js trên Amazon Linux 2023  Dưới đây là một tập lệnh Bash để cài đặt Node.js trên Amazon Linux. Hãy sao chép và thực thi các bước sau:\n#!/bin/bash\r# Các màu cho định dạng\rGREEN=\u0026#39;\\033[0;32m\u0026#39;\rNC=\u0026#39;\\033[0m\u0026#39; # Không màu\r# Kiểm tra xem NVM đã được cài đặt chưa\rif ! command -v nvm \u0026amp;\u0026gt; /dev/null; then\r# Bước 1: Cài đặt nvm\rcurl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.0/install.sh | bash\rsource ~/.nvm/nvm.sh\rfi\r# Xác minh việc cài đặt nvm\rnvm --version\r# Cài đặt phiên bản LTS của Node.js\rnvm install --lts\r# Sử dụng phiên bản LTS đã cài đặt\rnvm use --lts\r# Xác minh cài đặt Node.js và npm\rnode -v\rnpm -v\r# Bước 4: Tạo tệp package.json (nếu nó chưa tồn tại)\rif [ ! -f package.json ]; then\rnpm init -y\recho -e \u0026#34;${GREEN}Đã tạo tệp package.json.${NC}\u0026#34;\rfi\r# Bước 5: Cài đặt các gói npm cần thiết\recho -e \u0026#34;Đang cài đặt các gói npm cần thiết...\u0026#34;\rnpm install express dotenv express-handlebars body-parser mysql\r# Bước 6: Cài đặt nodemon như một phần phát triển\recho -e \u0026#34;Đang cài đặt nodemon như một phần phát triển...\u0026#34;\rnpm install --save-dev nodemon\rnpm install -g nodemon\r# Bước 7: Thêm script npm start vào package.json\rif ! grep -q \u0026#39;\u0026#34;start\u0026#34;:\u0026#39; package.json; then\rnpm set-script start \u0026#34;index.js\u0026#34; # Thay thế \u0026#34;your-app.js\u0026#34; bằng tệp điểm nhập của bạn\recho -e \u0026#34;${GREEN}Đã thêm script npm start vào package.json.${NC}\u0026#34;\rfi\recho -e \u0026#34;${GREEN}Cài đặt hoàn tất. Bây giờ bạn có thể bắt đầu xây dựng và chạy ứng dụng Node.js của mình bằng \u0026#39;npm start\u0026#39;.${NC}\u0026#34; Đây là một đoạn script Bash dùng để cài đặt và cấu hình máy chủ MySQL trên một hệ thống . Script này thực hiện các bước sau:    Đặt các biến với đường dẫn RPM của MySQL và thông tin cơ sở dữ liệu như địa chỉ RDS, tên cơ sở dữ liệu, tên người dùng và mật khẩu.\n  Kiểm tra xem RPM của kho cộng đồng MySQL đã tồn tại trong thư mục hiện tại chưa. Nếu chưa tồn tại, nó sẽ tải về RPM từ URL đã chỉ định.\n  Cài đặt RPM của kho cộng đồng MySQL và MySQL Server.\n  Khởi động máy chủ MySQL và cấu hình nó để tự động khởi động cùng hệ thống.\n  Kiểm tra phiên bản MySQL đã cài đặt.\n  Bảo mật máy chủ MySQL bằng lệnh mysql_secure_installation.\n  Tạo hoặc cập nhật tệp .env với thông tin cơ sở dữ liệu (địa chỉ, tên cơ sở dữ liệu, tên người dùng và mật khẩu).\n  Kết nối đến máy chủ MySQL với thông tin xác thực và bạn có thể thêm các lệnh SQL cụ thể tại đây.\n   Lưu ý: Để thực hiện script này, bạn cần có quyền sudo và phải chắc chắn rằng bạn đã cung cấp đúng thông tin cơ sở dữ liệu (RDS Endpoint, tên cơ sở dữ liệu, tên người dùng và mật khẩu) trước khi chạy script.\n #!/bin/bash\r# Set variables for MySQL RPM and database information\rMYSQL_RPM_URL=\u0026#34;https://dev.mysql.com/get/mysql80-community-release-el9-1.noarch.rpm\u0026#34;\rDB_HOST=\u0026#34;RDS Endpoint\u0026#34;\rDB_NAME=\u0026#34;Database name\u0026#34;\rDB_USER=\u0026#34;Database username\u0026#34;\rDB_PASS=\u0026#34;Database password\u0026#34;\r# Check if MySQL Community repository RPM already exists\rif [ ! -f mysql80-community-release-el9-1.noarch.rpm ]; then\rsudo wget $MYSQL_RPM_URL\rfi\r# Install MySQL Community repository\rsudo dnf install -y mysql80-community-release-el9-1.noarch.rpm\r# Install MySQL server\rsudo dnf install -y mysql-community-server\r# Start MySQL server\rsudo systemctl start mysqld\r# Enable MySQL to start on boot\rsudo systemctl enable mysqld\r# Check MySQL version\rmysql -V\r# Secure the MySQL server\rsudo mysql_secure_installation\r# Create or update the .env file with database information\recho \u0026#34;DB_HOST=$DB_HOST\u0026#34; \u0026gt;\u0026gt; .env\recho \u0026#34;DB_NAME=$DB_NAME\u0026#34; \u0026gt;\u0026gt; .env\recho \u0026#34;DB_USER=$DB_USER\u0026#34; \u0026gt;\u0026gt; .env\recho \u0026#34;DB_PASS=$DB_PASS\u0026#34; \u0026gt;\u0026gt; .env\r# Connect to MySQL and create a new database (you might want to add specific SQL commands here)\rmysql -h $DB_HOST -P 3306 -u $DB_USER -p$DB_PASS Tạo Database và Bảng trong AWS RDS  Sau khi kết nối thành công vào RDS (Relational Database Service) trên AWS, chúng ta có thể tạo một database mới và định nghĩa một bảng trong đó bằng cách sử dụng SQL script sau đây.\nTạo Database Đầu tiên, chúng ta sẽ tạo một database mới nếu nó chưa tồn tại. Sử dụng lệnh sau:\nCREATE DATABASE IF NOT EXISTS first_cloud_users; Lệnh này kiểm tra xem database \u0026ldquo;first_cloud_users\u0026rdquo; đã tồn tại hay chưa. Nếu chưa tồn tại, nó sẽ tạo một database mới có tên \u0026ldquo;first_cloud_users\u0026rdquo;.\nSử dụng Database Tiếp theo, chúng ta sử dụng database \u0026ldquo;first_cloud_users\u0026rdquo; bằng cách sử dụng lệnh:\nUSE first_cloud_users; Lệnh này cho biết rằng tất cả các lệnh SQL sau đó sẽ được thực thi trong database \u0026ldquo;first_cloud_users\u0026rdquo;.\nTạo Bảng \u0026ldquo;user\u0026rdquo; Chúng ta đã tạo database và sử dụng nó. Bây giờ, chúng ta sẽ định nghĩa một bảng \u0026ldquo;user\u0026rdquo; trong database này bằng cách sử dụng SQL script sau:\nCREATE TABLE `user`\r(\r`id` INT NOT NULL AUTO_INCREMENT PRIMARY KEY,\r`first_name` VARCHAR(45) NOT NULL,\r`last_name` VARCHAR(45) NOT NULL,\r`email` VARCHAR(100) NOT NULL UNIQUE,\r`phone` VARCHAR(15) NOT NULL,\r`comments` TEXT NOT NULL,\r`status` ENUM(\u0026#39;active\u0026#39;, \u0026#39;inactive\u0026#39;) NOT NULL DEFAULT \u0026#39;active\u0026#39;\r) ENGINE = InnoDB; Lệnh này định nghĩa cấu trúc của bảng \u0026ldquo;user\u0026rdquo; với các cột như \u0026ldquo;id\u0026rdquo;, \u0026ldquo;first_name\u0026rdquo;, \u0026ldquo;last_name\u0026rdquo;, \u0026ldquo;email\u0026rdquo;, \u0026ldquo;phone\u0026rdquo;, \u0026ldquo;comments\u0026rdquo;, và \u0026ldquo;status\u0026rdquo;. Các cột này đại diện cho thông tin về người dùng, và cột \u0026ldquo;id\u0026rdquo; được đặt là khóa chính tự động tăng.\nThêm Dữ liệu vào Bảng \u0026ldquo;user\u0026rdquo; Cuối cùng, chúng ta có thể thêm dữ liệu vào bảng \u0026ldquo;user\u0026rdquo; bằng cách sử dụng lệnh INSERT INTO. Dưới đây là ví dụ thêm một số bản ghi vào bảng:\nINSERT INTO `user`\r(`first_name`, `last_name`, `email`, `phone`, `comments`, `status`)\rVALUES\r(\u0026#39;Amanda\u0026#39;, \u0026#39;Nunes\u0026#39;, \u0026#39;anunes@ufc.com\u0026#39;, \u0026#39;012345 678910\u0026#39;, \u0026#39;I love AWS FCJ\u0026#39;, \u0026#39;active\u0026#39;),\r(\u0026#39;Alexander\u0026#39;, \u0026#39;Volkanovski\u0026#39;, \u0026#39;avolkanovski@ufc.com\u0026#39;, \u0026#39;012345 678910\u0026#39;, \u0026#39;I love AWS FCJ\u0026#39;, \u0026#39;active\u0026#39;),\r(\u0026#39;Khabib\u0026#39;, \u0026#39;Nurmagomedov\u0026#39;, \u0026#39;knurmagomedov@ufc.com\u0026#39;, \u0026#39;012345 678910\u0026#39;, \u0026#39;I love AWS FCJ\u0026#39;, \u0026#39;active\u0026#39;),\r(\u0026#39;Kamaru\u0026#39;, \u0026#39;Usman\u0026#39;, \u0026#39;kusman@ufc.com\u0026#39;, \u0026#39;012345 678910\u0026#39;, \u0026#39;I love AWS FCJ\u0026#39;, \u0026#39;active\u0026#39;),\r(\u0026#39;Israel\u0026#39;, \u0026#39;Adesanya\u0026#39;, \u0026#39;iadesanya@ufc.com\u0026#39;, \u0026#39;012345 678910\u0026#39;, \u0026#39;I love AWS FCJ\u0026#39;, \u0026#39;active\u0026#39;),\r(\u0026#39;Henry\u0026#39;, \u0026#39;Cejudo\u0026#39;, \u0026#39;hcejudo@ufc.com\u0026#39;, \u0026#39;012345 678910\u0026#39;, \u0026#39;I love AWS FCJ\u0026#39;, \u0026#39;active\u0026#39;),\r(\u0026#39;Valentina\u0026#39;, \u0026#39;Shevchenko\u0026#39;, \u0026#39;vshevchenko@ufc.com\u0026#39;, \u0026#39;012345 678910\u0026#39;, \u0026#39;I love AWS FCJ\u0026#39;, \u0026#39;active\u0026#39;),\r(\u0026#39;Tyron\u0026#39;, \u0026#39;Woodley\u0026#39;, \u0026#39;twoodley@ufc.com\u0026#39;, \u0026#39;012345 678910\u0026#39;, \u0026#39;I love AWS FCJ\u0026#39;, \u0026#39;active\u0026#39;),\r(\u0026#39;Rose\u0026#39;, \u0026#39;Namajunas\u0026#39;, \u0026#39;rnamajunas@ufc.com\u0026#39;, \u0026#39;012345 678910\u0026#39;, \u0026#39;I love AWS FCJ\u0026#39;, \u0026#39;active\u0026#39;),\r(\u0026#39;Tony\u0026#39;, \u0026#39;Ferguson\u0026#39;, \u0026#39;tferguson@ufc.com\u0026#39;, \u0026#39;012345 678910\u0026#39;, \u0026#39;I love AWS FCJ\u0026#39;, \u0026#39;active\u0026#39;),\r(\u0026#39;Jorge\u0026#39;, \u0026#39;Masvidal\u0026#39;, \u0026#39;jmasvidal@ufc.com\u0026#39;, \u0026#39;012345 678910\u0026#39;, \u0026#39;I love AWS FCJ\u0026#39;, \u0026#39;active\u0026#39;),\r(\u0026#39;Nate\u0026#39;, \u0026#39;Diaz\u0026#39;, \u0026#39;ndiaz@ufc.com\u0026#39;, \u0026#39;012345 678910\u0026#39;, \u0026#39;I love AWS FCJ\u0026#39;, \u0026#39;active\u0026#39;),\r(\u0026#39;Conor\u0026#39;, \u0026#39;McGregor\u0026#39;, \u0026#39;cmcGregor@ufc.com\u0026#39;, \u0026#39;012345 678910\u0026#39;, \u0026#39;I love AWS FCJ\u0026#39;, \u0026#39;active\u0026#39;),\r(\u0026#39;Cris\u0026#39;, \u0026#39;Cyborg\u0026#39;, \u0026#39;ccyborg@ufc.com\u0026#39;, \u0026#39;012345 678910\u0026#39;, \u0026#39;I love AWS FCJ\u0026#39;, \u0026#39;active\u0026#39;),\r(\u0026#39;Tecia\u0026#39;, \u0026#39;Torres\u0026#39;, \u0026#39;ttorres@ufc.com\u0026#39;, \u0026#39;012345 678910\u0026#39;, \u0026#39;I love AWS FCJ\u0026#39;, \u0026#39;active\u0026#39;),\r(\u0026#39;Ronda\u0026#39;, \u0026#39;Rousey\u0026#39;, \u0026#39;rrousey@ufc.com\u0026#39;, \u0026#39;012345 678910\u0026#39;, \u0026#39;I love AWS FCJ\u0026#39;, \u0026#39;active\u0026#39;),\r(\u0026#39;Holly\u0026#39;, \u0026#39;Holm\u0026#39;, \u0026#39;hholm@ufc.com\u0026#39;, \u0026#39;012345 678910\u0026#39;, \u0026#39;I love AWS FCJ\u0026#39;, \u0026#39;active\u0026#39;),\r(\u0026#39;Joanna\u0026#39;, \u0026#39;Jedrzejczyk\u0026#39;, \u0026#39;jjedrzejczyk@ufc.com\u0026#39;, \u0026#39;012345 678910\u0026#39;, \u0026#39;I love AWS FCJ\u0026#39;, \u0026#39;active\u0026#39;); Lệnh này thêm các bản ghi của người dùng vào bảng \u0026ldquo;user\u0026rdquo; với thông tin như tên, email, số điện thoại, bình luận và trạng thái mặc định là \u0026ldquo;active\u0026rdquo;.\nĐây là cách tạo và quản lý một database và bảng trong AWS RDS sử dụng SQL script.\nmột số lệnh SQL để kiểm tra thông tin về cơ sở dữ liệu (database) trong hệ thống quản lý cơ sở dữ liệu (DBMS) như MySQL hoặc PostgreSQL: Hiển thị danh sách tất cả các database: SHOW DATABASES; Lệnh này sẽ liệt kê tất cả các database có sẵn trong hệ thống.\nChọn một database cụ thể để làm việc: USE database_name; Lệnh này sẽ chuyển bạn từ database hiện tại sang database có tên là \u0026ldquo;database_name\u0026rdquo;. Sau khi sử dụng lệnh này, tất cả các lệnh SQL tiếp theo sẽ áp dụng cho database này.\nHiển thị các bảng trong database hiện tại: SHOW TABLES; Lệnh này sẽ liệt kê tất cả các bảng có trong database hiện tại.\nHiển thị cấu trúc của một bảng cụ thể: DESCRIBE table_name; Lệnh này sẽ cho bạn biết cấu trúc của bảng có tên là \u0026ldquo;table_name\u0026rdquo;, bao gồm tên cột, kiểu dữ liệu và các thuộc tính khác của cột.\nHiển thị thông tin về kích thước của database: SELECT table_schema \u0026#34;Database Name\u0026#34;, SUM(data_length + index_length) / 1024 / 1024 \u0026#34;Database Size (MB)\u0026#34;\rFROM information_schema.tables\rGROUP BY table_schema; Lệnh này sẽ hiển thị thông tin về kích thước của các database trong hệ thống, tính bằng đơn vị Megabyte (MB).\nNhớ thay thế \u0026ldquo;database_name\u0026rdquo; và \u0026ldquo;table_name\u0026rdquo; bằng tên cụ thể của database và bảng mà bạn muốn kiểm tra. Các lệnh này giúp bạn quản lý và kiểm tra thông tin về cơ sở dữ liệu của bạn.\nSau khi bạn đã ở trong thư mục ứng dụng, chạy lệnh sau để khởi động ứng dụng bằng npm start:  npm start Kiểm tra trạng thái EC2 Instance: Đảm bảo rằng EC2 Instance của bạn đang chạy và hoạt động bình thường.    Kiểm tra ứng dụng trên trình duyệt: Mở trình duyệt web và nhập địa chỉ IP hoặc tên miền của EC2 Instance, kèm theo cổng 5000 (ví dụ: http://\u0026lt;địa chỉ IP hoặc tên miền\u0026gt;:5000). Điều này sẽ thực hiện kết nối đến ứng dụng của bạn chạy trên cổng 5000.\n  Kiểm tra kết quả: Trình duyệt sẽ hiển thị ứng dụng của bạn nếu mọi thứ được cấu hình đúng và EC2 Instance đang hoạt động. Nếu không, bạn cần kiểm tra lại các bước trước đó để xác định vấn đề và sửa chữa nó.\n  http://\u0026lt;địa chỉ IP hoặc tên miền\u0026gt;:5000 Giám sát AWS RDS  Trên giao diện AWS RDS, bạn có thể thực hiện các bước sau để theo dõi:   Chọn Databases (Cơ sở dữ liệu). Chọn DB instance mà bạn đã tạo. Chọn Monitoring (Theo dõi).  Để xem thông tin về sao lưu của DB instance trong AWS RDS, làm theo các bước sau:    Đăng nhập vào AWS Management Console.\n  Chọn dịch vụ \u0026ldquo;Amazon RDS\u0026rdquo; trong danh sách các dịch vụ.\n  Trong bảng điều khiển RDS, chọn DB instance bạn muốn kiểm tra.\n  Trong trang quản lý DB instance, điều hướng đến tab \u0026ldquo;Maintenance \u0026amp; backups\u0026rdquo; (Bảo trì và sao lưu).\n  Tại đây, bạn có thể xem thông tin về sao lưu tự động và sao lưu thủ công. Bạn cũng có thể cấu hình và quản lý các thiết lập sao lưu.\n  Xem thông tin Snapshot.  Chọn DB snapshot mà bạn muốn khôi phục.   Trong phần Actions, chọn Restore snapshot.  Trên trang Restore snapshot, điền tên cho DB instance bạn muốn khôi phục vào ô DB instance identifier.    Chọn các thiết lập khác như kích thước bộ nhớ được cấp phát.\n  Để biết thêm thông tin về mỗi thiết lập, hãy xem Settings for DB instances.\n  Cuối cùng, chọn Restore DB instance.\n  Hoàn thành restore snapshot.  7.Kiểm tra database instance đã restore.\n"
},
{
	"uri": "/vi/6-backup/",
	"title": "Backup và restore",
	"tags": [],
	"description": "",
	"content": "Giám sát AWS RDS - Backup và restore   Trên giao diện AWS RDS, bạn có thể thực hiện các bước sau để theo dõi:\n Chọn Databases (Cơ sở dữ liệu). Chọn DB instance mà bạn đã tạo. Chọn Monitoring (Theo dõi).    Để xem thông tin về sao lưu của DB instance trong AWS RDS, làm theo các bước sau:\n Đăng nhập vào AWS Management Console. Chọn dịch vụ \u0026ldquo;Amazon RDS\u0026rdquo; trong danh sách các dịch vụ. Trong bảng điều khiển RDS, chọn DB instance bạn muốn kiểm tra. Trong trang quản lý DB instance, điều hướng đến tab \u0026ldquo;Maintenance \u0026amp; backups\u0026rdquo; (Bảo trì và sao lưu). Tại đây, bạn có thể xem thông tin về sao lưu tự động và sao lưu thủ công. Bạn cũng có thể cấu hình và quản lý các thiết lập sao lưu.    Xem thông tin Snapshot.\n  Chọn DB snapshot mà bạn muốn khôi phục.\n Trong phần Actions, chọn Restore snapshot.    Trên trang Restore snapshot, điền tên cho DB instance bạn muốn khôi phục vào ô DB instance identifier.\n Chọn các thiết lập khác như kích thước bộ nhớ được cấp phát. Để biết thêm thông tin về mỗi thiết lập, hãy xem Settings for DB instances. Cuối cùng, chọn Restore DB instance.    Hoàn thành restore snapshot.\n  Kiểm tra database instance đã restore.\n  "
},
{
	"uri": "/vi/7-cleanup/",
	"title": "Dọn dẹp tài nguyên",
	"tags": [],
	"description": "",
	"content": "Dọn dẹp tài nguyên\n  Để xóa VPC và các tài nguyên liên quan:\n Xóa DB subnet group. Mở bảng điều khiển Amazon RDS. Trong ngăn dẫn hướng, chọn Subnet groups. Chọn DB subnet group liên quan bài lab. Chọn Delete, sau đó chọn Delete trong cửa sổ xác nhận. Xóa security groups. Mở bảng điều khiển Amazon VPC. Chọn VPC Dashboard, sau đó chọn Security Groups. Chọn security group liên quan bài lab. Chọn Actions, chọn Delete security groups và sau đó chọn Delete để xác nhận. Xóa NAT gateway. Mở bảng điều khiển Amazon VPC. Chọn VPC Dashboard, sau đó chọn NAT Gateways. Chọn NAT Gateway liên quan bài lab. Chọn Actions, chọn Delete NAT gateway. Xác nhận xóa và chọn Delete. Xóa VPC. Mở bảng điều khiển Amazon VPC. Chọn Bảng điều khiển VPC, sau đó chọn VPC. Chọn VPC bạn muốn xóa. Từ Actions, chọn Delete VPC. Trên trang xác nhận, hãy nhập delete, rồi chọn Delete.    Release the Elastic IP addresses\n Mở bảng điều khiển Amazon EC2. Chọn Amazon EC2 Dashboard, sau đó chọn Elastic IPs. Chọn Elastic IP address liên quan bài lab. Từ Actions, chọn Release Elastic IP addresses. Trên trang xác nhận, hãy chọn Release.    Terminate EC2 instance\n Truy cập EC2 Management Console. Trên thanh điều hướng bên trái, chọn Instances. Chọn tất cả EC2 Instance liên quan tới bài lab. Click Actions. Click Manage Instance State. Chọn Terminate. Click Change State.    Xóa DB Instance\n Truy cập RDS Management Console. Trên thanh điều hướng bên trái, chọn Databases. Chọn tất cả DB Instance liên quan tới bài lab. Click Actions. Click Delete. Bỏ chọn Create final snapshot? và chọn I acknowledge that upon instance deletion, automated backups, including system snapshots and point-in-time recovery, will no longer be available. Gõ delete me vào ô trống. Click Delete.    Xóa DB Snapshots\n Truy cập RDS Management Console. Trên thanh điều hướng bên trái, chọn Snapshots. Chọn tất cả snapshot liên quan tới bài lab. Click Actions. Click Delete snapshot. Click Delete.    "
},
{
	"uri": "/vi/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "/vi/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]